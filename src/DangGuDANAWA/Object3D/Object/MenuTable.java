package DangGuDANAWA.Object3D.Object;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;

import javax.microedition.khronos.opengles.GL10;

import DangGuDANAWA.Object3D.Interface.Object3D;

public class MenuTable implements Object3D {
	private int size[];
	private int objectNumber;

	public MenuTable() {
		setValue();
		setVertex0();
		setFace0();
		setNormal0();
		setColor0();
		setVertex1();
		setFace1();
		setNormal1();
		setColor1();
		setVertex2();
		setFace2();
		setNormal2();
		setColor2();
		setVertex3();
		setFace3();
		setNormal3();
		setColor3();
		setVertex4();
		setFace4();
		setNormal4();
		setColor4();
		setVertex5();
		setFace5();
		setNormal5();
		setColor5();
		setVertex6();
		setFace6();
		setNormal6();
		setColor6();
	}

	public void draw(GL10 gl) {
		gl.glEnableClientState(GL10.GL_VERTEX_ARRAY);
		gl.glEnableClientState(GL10.GL_COLOR_ARRAY);
		gl.glEnableClientState(GL10.GL_NORMAL_ARRAY);
		for (int i = 0; i < objectNumber; i++) {
			gl.glVertexPointer(3, GL10.GL_FLOAT, 0, mVertexBuffer[i]);
			gl.glColorPointer(4, GL10.GL_FLOAT, 0, mColorBuffer[i]);
			gl.glNormalPointer(GL10.GL_FLOAT, 0, mNormalBuffer[i]);
			gl.glDrawElements(GL10.GL_TRIANGLES, size[i], GL10.GL_UNSIGNED_BYTE, mIndexBuffer[i]);
		}
		gl.glDisableClientState(GL10.GL_VERTEX_ARRAY);
		gl.glDisableClientState(GL10.GL_COLOR_ARRAY);
		gl.glDisableClientState(GL10.GL_NORMAL_ARRAY);
	}

	private FloatBuffer[] mVertexBuffer;
	private FloatBuffer[] mColorBuffer;
	private FloatBuffer[] mNormalBuffer;
	private ByteBuffer[] mIndexBuffer;

	public void setValue() {
		objectNumber = 7;
		size = new int[objectNumber];
		mVertexBuffer = new FloatBuffer[objectNumber];
		mIndexBuffer = new ByteBuffer[objectNumber];
		mNormalBuffer = new FloatBuffer[objectNumber];
		mColorBuffer = new FloatBuffer[objectNumber];
	}

	public void setVertex0() {
		float valueVertex[] = { 17.3723f, -22.0341f, 23.5551f, 16.4203f, -0.272315f, 23.5551f, 15.9159f, -22.5486f,
				23.5551f, 16.4922f, -1.31392f, 23.5551f, 16.7066f, -2.33762f, 23.5551f, 17.0599f, -3.32601f, 23.5551f,
				17.546f, -4.26222f, 23.5551f, 18.7515f, -21.3543f, 23.5551f, 18.1567f, -5.13022f, 23.5551f, 18.8814f,
				-5.91511f, 23.5551f, 20.0327f, -20.5196f, 23.5551f, 24.8958f, -11.628f, 23.5551f, 21.1968f, -19.5423f,
				23.5551f, 22.2263f, -18.4372f, 23.5551f, 23.1056f, -17.221f, 23.5551f, 23.8217f, -15.9117f, 23.5551f,
				24.3637f, -14.5292f, 23.5551f, 24.7236f, -13.0941f, 23.5551f, -0.904813f, 14.4381f, 23.5551f,
				0.233487f, -14.9421f, 23.5551f, 0.233487f, 14.3673f, 23.5551f, 1.39149f, -15.0119f, 23.5551f, 1.37169f,
				14.4381f, 23.5551f, 2.49039f, 14.6495f, 23.5551f, 2.53099f, -15.2204f, 23.5551f, 3.57049f, 14.9977f,
				23.5551f, 3.63349f, -15.564f, 23.5551f, 4.59339f, 15.4767f, 23.5551f, 4.68129f, -16.0374f, 23.5551f,
				5.54169f, 16.0785f, 23.5551f, 5.65759f, -16.6329f, 23.5551f, 6.39909f, 16.7927f, 23.5551f, 6.54659f,
				-17.3409f, 23.5551f, 12.5646f, 22.6492f, 23.5551f, 12.8598f, -23.0538f, 23.5551f, 14.1378f, 22.4603f,
				23.5551f, 14.4042f, -22.8902f, 23.5551f, 15.6758f, 22.094f, 23.5551f, 17.1567f, 21.5557f, 23.5551f,
				16.4922f, 0.769185f, 23.5551f, 16.7066f, 1.79288f, 23.5551f, 17.0599f, 2.78138f, 23.5551f, 17.546f,
				3.71758f, 23.5551f, 18.559f, 20.8532f, 23.5551f, 18.1567f, 4.58559f, 23.5551f, 18.8814f, 5.37048f,
				23.5551f, 19.8628f, 19.9964f, 23.5551f, 24.8958f, 10.9433f, 23.5551f, 21.0492f, 18.9977f, 23.5551f,
				22.1013f, 17.8714f, 23.5551f, 23.0038f, 16.6337f, 23.5551f, 23.744f, 15.3025f, 23.5551f, 24.311f,
				13.8967f, 23.5551f, 24.6968f, 12.4366f, 23.5551f, 25.9024f, -12.4181f, 20.2542f, 25.7212f, -14.0428f,
				20.2542f, 25.3427f, -15.6331f, 20.2542f, 24.7725f, -17.1651f, 20.2542f, 24.0192f, -18.616f, 20.2542f,
				23.0942f, -19.9638f, 20.2542f, 22.0112f, -21.1884f, 20.2542f, 20.7866f, -22.2713f, 20.2542f, 19.4388f,
				-23.1964f, 20.2542f, 17.988f, -23.9496f, 20.2542f, 16.4559f, -24.5198f, 20.2542f, 14.8656f, -24.8984f,
				20.2542f, 13.2409f, -25.0796f, 20.2542f, 5.66449f, -17.9643f, 20.2542f, 6.59969f, -18.7488f, 20.2542f,
				4.63749f, -17.3044f, 20.2542f, 3.53519f, -16.7798f, 20.2542f, 2.37539f, -16.399f, 20.2542f, 1.17669f,
				-16.168f, 20.2542f, -0.0416128f, -16.0906f, 20.2542f, -0.0416128f, 16.3888f, 20.2542f, 1.15579f,
				16.4673f, 20.2542f, 2.33269f, 16.7015f, 20.2542f, 3.46889f, 17.0873f, 20.2542f, 4.54499f, 17.6182f,
				20.2542f, 5.54249f, 18.2851f, 20.2542f, 6.44439f, 19.0765f, 20.2542f, 14.5854f, 25.357f, 20.2542f,
				12.9304f, 25.5664f, 20.2542f, 16.2033f, 24.9512f, 20.2542f, 17.7611f, 24.3547f, 20.2542f, 19.2364f,
				23.5761f, 20.2542f, 20.6079f, 22.6266f, 20.2542f, 21.856f, 21.5199f, 20.2542f, 22.9627f, 20.2718f,
				20.2542f, 23.9122f, 18.9003f, 20.2542f, 24.6907f, 17.4251f, 20.2542f, 25.2872f, 15.8673f, 20.2542f,
				25.6931f, 14.2493f, 20.2542f, 25.9024f, 12.5944f, 20.2542f, 19.5755f, 6.41888f, 20.2542f, 18.8131f,
				5.54909f, 20.2542f, 18.1707f, 4.58718f, 20.2542f, 17.6593f, 3.54969f, 20.2542f, 17.2877f, 2.45439f,
				20.2542f, 17.0621f, 1.31998f, 20.2542f, 16.9865f, 0.165785f, 20.2542f, 17.0621f, -0.988415f, 20.2542f,
				17.2877f, -2.12292f, 20.2542f, 17.6593f, -3.21821f, 20.2542f, 18.1707f, -4.25562f, 20.2542f, 18.8131f,
				-5.21751f, 20.2542f, 19.5755f, -6.08732f, 20.2542f, -0.0416128f, 16.3888f, 18.2228f, 1.15579f,
				16.4673f, 18.2228f, 2.33269f, 16.7015f, 18.2228f, 3.46889f, 17.0873f, 18.2228f, 4.54499f, 17.6182f,
				18.2228f, 5.54249f, 18.2851f, 18.2228f, 6.44439f, 19.0765f, 18.2228f, 12.9304f, 25.5664f, 18.2228f,
				14.5854f, 25.357f, 18.2228f, 16.2033f, 24.9512f, 18.2228f, 17.7611f, 24.3547f, 18.2228f, 19.2364f,
				23.5761f, 18.2228f, 20.6079f, 22.6266f, 18.2228f, 21.856f, 21.5199f, 18.2228f, 22.9627f, 20.2718f,
				18.2228f, 23.9122f, 18.9003f, 18.2228f, 24.6907f, 17.4251f, 18.2228f, 16.9865f, 0.165785f, 18.2228f,
				17.0621f, 1.31998f, 18.2228f, 17.2877f, 2.45439f, 18.2228f, 17.6593f, 3.54969f, 18.2228f, 18.1707f,
				4.58718f, 18.2228f, 18.8131f, 5.54909f, 18.2228f, 19.5755f, 6.41888f, 18.2228f, 25.9024f, 12.5944f,
				18.2228f, 25.2872f, 15.8673f, 18.2228f, 25.6931f, 14.2493f, 18.2228f, 17.0621f, -0.988415f, 18.2228f,
				17.2877f, -2.12292f, 18.2228f, 17.6593f, -3.21821f, 18.2228f, 18.1707f, -4.25562f, 18.2228f, 18.8131f,
				-5.21751f, 18.2228f, 19.5755f, -6.08732f, 18.2228f, 25.9024f, -12.4181f, 18.2228f, 24.7725f, -17.1651f,
				18.2228f, 25.3427f, -15.6331f, 18.2228f, 25.7212f, -14.0428f, 18.2228f, -0.0416128f, -16.0906f,
				18.2228f, 1.17669f, -16.168f, 18.2228f, 2.37539f, -16.399f, 18.2228f, 3.53519f, -16.7798f, 18.2228f,
				4.63749f, -17.3044f, 18.2228f, 5.66449f, -17.9643f, 18.2228f, 6.59969f, -18.7488f, 18.2228f, 13.2409f,
				-25.0796f, 18.2228f, 14.8656f, -24.8984f, 18.2228f, 16.4559f, -24.5198f, 18.2228f, 17.988f, -23.9496f,
				18.2228f, 19.4388f, -23.1964f, 18.2228f, 20.7866f, -22.2713f, 18.2228f, 22.0112f, -21.1884f, 18.2228f,
				23.0942f, -19.9638f, 18.2228f, 24.0192f, -18.616f, 18.2228f };
		ByteBuffer vbb = ByteBuffer.allocateDirect(valueVertex.length * 4);
		vbb.order(ByteOrder.nativeOrder());
		mVertexBuffer[0] = vbb.asFloatBuffer();
		mVertexBuffer[0].put(valueVertex);
		mVertexBuffer[0].position(0);
	}

	public void setVertex1() {
		float valueVertex[] = { 10.4309f, -15.7698f, -6.25702e-005f, 10.4335f, -13.3607f, -6.25702e-005f, 10.2736f,
				-14.565f, -6.25702e-005f, 10.8946f, -16.8927f, -6.25702e-005f, 10.8997f, -12.2387f, -6.25702e-005f,
				11.6332f, -17.8574f, -6.25702e-005f, 11.6403f, -11.2756f, -6.25702e-005f, 12.5963f, -18.598f,
				-6.25702e-005f, 12.605f, -10.5371f, -6.25702e-005f, 13.7182f, -19.0642f, -6.25702e-005f, 13.728f,
				-10.0734f, -6.25702e-005f, 14.9226f, -19.2241f, -6.25702e-005f, 14.9327f, -9.91606f, -6.25702e-005f,
				16.1273f, -19.0668f, -6.25702e-005f, 16.1371f, -10.076f, -6.25702e-005f, 17.2503f, -18.6031f,
				-6.25702e-005f, 17.259f, -10.5421f, -6.25702e-005f, 18.215f, -17.8645f, -6.25702e-005f, 18.2221f,
				-11.2828f, -6.25702e-005f, 18.9556f, -16.9015f, -6.25702e-005f, 18.9607f, -12.2475f, -6.25702e-005f,
				19.4218f, -15.7795f, -6.25702e-005f, 19.4244f, -13.3704f, -6.25702e-005f, 19.5816f, -14.5751f,
				-6.25702e-005f, 10.8997f, -12.2387f, 1.57714f, 11.3314f, -13.6023f, 1.57714f, 11.2035f, -14.566f,
				1.57714f, 11.6403f, -11.2756f, 1.57714f, 11.7045f, -12.7045f, 1.57714f, 12.605f, -10.5371f, 1.57714f,
				12.2971f, -11.9339f, 1.57714f, 13.0691f, -11.3429f, 1.57714f, 13.728f, -10.0734f, 1.57714f, 13.9677f,
				-10.9718f, 1.57714f, 14.9327f, -9.91606f, 1.57714f, 14.9317f, -10.846f, 1.57714f, 15.8954f, -10.9739f,
				1.57714f, 16.1371f, -10.076f, 1.57714f, 16.7932f, -11.3469f, 1.57714f, 17.259f, -10.5421f, 1.57714f,
				17.5639f, -11.9396f, 1.57714f, 18.2221f, -11.2828f, 1.57714f, 18.1548f, -12.7115f, 1.57714f, 18.5259f,
				-13.6101f, 1.57714f, 18.9607f, -12.2475f, 1.57714f, 18.6518f, -14.5741f, 1.57714f, 18.9556f, -16.9015f,
				1.57714f, 19.4218f, -15.7795f, 1.57714f, 19.4244f, -13.3704f, 1.57714f, 19.5816f, -14.5751f, 1.57714f,
				10.4335f, -13.3607f, 1.57714f, 10.4309f, -15.7698f, 1.57714f, 10.2736f, -14.565f, 1.57714f, 10.8946f,
				-16.8927f, 1.57714f, 11.6332f, -17.8574f, 1.57714f, 11.3294f, -15.5301f, 1.57714f, 11.7004f, -16.4286f,
				1.57714f, 12.5963f, -18.598f, 1.57714f, 12.2914f, -17.2006f, 1.57714f, 13.0621f, -17.7932f, 1.57714f,
				13.7182f, -19.0642f, 1.57714f, 13.9599f, -18.1663f, 1.57714f, 14.9226f, -19.2241f, 1.57714f, 14.9236f,
				-18.2942f, 1.57714f, 16.1273f, -19.0668f, 1.57714f, 15.8876f, -18.1684f, 1.57714f, 16.7862f, -17.7973f,
				1.57714f, 17.2503f, -18.6031f, 1.57714f, 17.5581f, -17.2063f, 1.57714f, 18.215f, -17.8645f, 1.57714f,
				18.1508f, -16.4356f, 1.57714f, 18.5238f, -15.5379f, 1.57714f, 11.7045f, -12.7045f, 4.88924f, 12.05f,
				-13.7957f, 4.88924f, 11.9476f, -14.5668f, 4.88924f, 12.2971f, -11.9339f, 4.88924f, 12.3485f, -13.0773f,
				4.88924f, 13.0691f, -11.3429f, 4.88924f, 12.8227f, -12.4606f, 4.88924f, 13.4404f, -11.9877f, 4.88924f,
				13.9677f, -10.9718f, 4.88924f, 14.1595f, -11.6907f, 4.88924f, 14.9317f, -10.846f, 4.88924f, 14.9309f,
				-11.59f, 4.88924f, 15.7021f, -11.6924f, 4.88924f, 15.8954f, -10.9739f, 4.88924f, 16.4204f, -11.9909f,
				4.88924f, 16.7932f, -11.3469f, 4.88924f, 17.0371f, -12.4652f, 4.88924f, 17.5639f, -11.9396f, 4.88924f,
				17.51f, -13.0829f, 4.88924f, 17.807f, -13.8019f, 4.88924f, 18.1548f, -12.7115f, 4.88924f, 17.9077f,
				-14.5733f, 4.88924f, 18.1508f, -16.4356f, 4.88924f, 18.5238f, -15.5379f, 4.88924f, 18.5259f, -13.6101f,
				4.88924f, 18.6518f, -14.5741f, 4.88924f, 11.3314f, -13.6023f, 4.88924f, 11.3294f, -15.5301f, 4.88924f,
				11.2035f, -14.566f, 4.88924f, 11.7004f, -16.4286f, 4.88924f, 12.0483f, -15.3382f, 4.88924f, 12.2914f,
				-17.2006f, 4.88924f, 12.3452f, -16.0573f, 4.88924f, 13.0621f, -17.7932f, 4.88924f, 12.8181f, -16.675f,
				4.88924f, 13.4348f, -17.1493f, 4.88924f, 13.9599f, -18.1663f, 4.88924f, 14.1532f, -17.4477f, 4.88924f,
				14.9236f, -18.2942f, 4.88924f, 14.9244f, -17.5501f, 4.88924f, 15.8876f, -18.1684f, 4.88924f, 15.6958f,
				-17.4494f, 4.88924f, 16.4149f, -17.1525f, 4.88924f, 16.7862f, -17.7973f, 4.88924f, 17.0326f, -16.6796f,
				4.88924f, 17.5581f, -17.2063f, 4.88924f, 17.5068f, -16.0629f, 4.88924f, 17.8053f, -15.3445f, 4.88924f,
				12.0483f, -15.3382f, 22.396f, 11.9476f, -14.5668f, 22.396f, 12.05f, -13.7957f, 22.396f, 12.3485f,
				-13.0773f, 22.396f, 12.8227f, -12.4606f, 22.396f, 13.4404f, -11.9877f, 22.396f, 14.1595f, -11.6907f,
				22.396f, 14.9309f, -11.59f, 22.396f, 15.7021f, -11.6924f, 22.396f, 16.4204f, -11.9909f, 22.396f,
				17.0371f, -12.4652f, 22.396f, 17.51f, -13.0829f, 22.396f, 17.807f, -13.8019f, 22.396f, 17.9077f,
				-14.5733f, 22.396f, 17.8053f, -15.3445f, 22.396f, 17.5068f, -16.0629f, 22.396f, 17.0326f, -16.6796f,
				22.396f, 16.4149f, -17.1525f, 22.396f, 15.6958f, -17.4494f, 22.396f, 14.9244f, -17.5501f, 22.396f,
				14.1532f, -17.4477f, 22.396f, 13.4348f, -17.1493f, 22.396f, 12.8181f, -16.675f, 22.396f, 12.3452f,
				-16.0573f, 22.396f };
		ByteBuffer vbb = ByteBuffer.allocateDirect(valueVertex.length * 4);
		vbb.order(ByteOrder.nativeOrder());
		mVertexBuffer[1] = vbb.asFloatBuffer();
		mVertexBuffer[1].put(valueVertex);
		mVertexBuffer[1].position(0);
	}

	public void setVertex2() {
		float valueVertex[] = { 10.6766f, 13.1776f, -6.25702e-005f, 10.6792f, 15.5867f, -6.25702e-005f, 10.5193f,
				14.3823f, -6.25702e-005f, 11.1403f, 12.0546f, -6.25702e-005f, 11.1454f, 16.7086f, -6.25702e-005f,
				11.8789f, 11.09f, -6.25702e-005f, 11.886f, 17.6717f, -6.25702e-005f, 12.842f, 10.3493f, -6.25702e-005f,
				12.8507f, 18.4103f, -6.25702e-005f, 13.9639f, 9.88322f, -6.25702e-005f, 13.9737f, 18.874f,
				-6.25702e-005f, 15.1683f, 9.72332f, -6.25702e-005f, 15.1784f, 19.0313f, -6.25702e-005f, 16.373f,
				9.88052f, -6.25702e-005f, 16.3828f, 18.8714f, -6.25702e-005f, 17.496f, 10.3443f, -6.25702e-005f,
				17.5047f, 18.4052f, -6.25702e-005f, 18.4607f, 11.0828f, -6.25702e-005f, 18.4678f, 17.6646f,
				-6.25702e-005f, 19.2013f, 12.0459f, -6.25702e-005f, 19.2064f, 16.6999f, -6.25702e-005f, 19.6675f,
				13.1678f, -6.25702e-005f, 19.6701f, 15.5769f, -6.25702e-005f, 19.8273f, 14.3722f, -6.25702e-005f,
				11.1454f, 16.7086f, 1.57714f, 11.5771f, 15.345f, 1.57714f, 11.4492f, 14.3813f, 1.57714f, 11.886f,
				17.6717f, 1.57714f, 11.9502f, 16.2428f, 1.57714f, 12.8507f, 18.4103f, 1.57714f, 12.5428f, 17.0135f,
				1.57714f, 13.3148f, 17.6045f, 1.57714f, 13.9737f, 18.874f, 1.57714f, 14.2134f, 17.9755f, 1.57714f,
				15.1784f, 19.0313f, 1.57714f, 15.1774f, 18.1014f, 1.57714f, 16.1411f, 17.9734f, 1.57714f, 16.3828f,
				18.8714f, 1.57714f, 17.0389f, 17.6004f, 1.57714f, 17.5047f, 18.4052f, 1.57714f, 17.8095f, 17.0078f,
				1.57714f, 18.4678f, 17.6646f, 1.57714f, 18.4005f, 16.2358f, 1.57714f, 18.7716f, 15.3372f, 1.57714f,
				19.2064f, 16.6999f, 1.57714f, 18.8975f, 14.3732f, 1.57714f, 19.2013f, 12.0459f, 1.57714f, 19.6675f,
				13.1678f, 1.57714f, 19.6701f, 15.5769f, 1.57714f, 19.8273f, 14.3722f, 1.57714f, 10.6792f, 15.5867f,
				1.57714f, 10.6766f, 13.1776f, 1.57714f, 10.5193f, 14.3823f, 1.57714f, 11.1403f, 12.0546f, 1.57714f,
				11.8789f, 11.09f, 1.57714f, 11.5751f, 13.4173f, 1.57714f, 11.9461f, 12.5187f, 1.57714f, 12.842f,
				10.3493f, 1.57714f, 12.5371f, 11.7468f, 1.57714f, 13.3078f, 11.1541f, 1.57714f, 13.9639f, 9.88322f,
				1.57714f, 14.2056f, 10.7811f, 1.57714f, 15.1683f, 9.72332f, 1.57714f, 15.1693f, 10.6531f, 1.57714f,
				16.373f, 9.88052f, 1.57714f, 16.1333f, 10.779f, 1.57714f, 17.0319f, 11.15f, 1.57714f, 17.496f,
				10.3443f, 1.57714f, 17.8038f, 11.741f, 1.57714f, 18.4607f, 11.0828f, 1.57714f, 18.3965f, 12.5117f,
				1.57714f, 18.7695f, 13.4095f, 1.57714f, 11.9502f, 16.2428f, 4.88924f, 12.2957f, 15.1517f, 4.88924f,
				12.1933f, 14.3805f, 4.88924f, 12.5428f, 17.0135f, 4.88924f, 12.5942f, 15.8701f, 4.88924f, 13.3148f,
				17.6045f, 4.88924f, 13.0684f, 16.4867f, 4.88924f, 13.6861f, 16.9597f, 4.88924f, 14.2134f, 17.9755f,
				4.88924f, 14.4052f, 17.2566f, 4.88924f, 15.1774f, 18.1014f, 4.88924f, 15.1766f, 17.3573f, 4.88924f,
				15.9477f, 17.2549f, 4.88924f, 16.1411f, 17.9734f, 4.88924f, 16.6661f, 16.9564f, 4.88924f, 17.0389f,
				17.6004f, 4.88924f, 17.2828f, 16.4822f, 4.88924f, 17.8095f, 17.0078f, 4.88924f, 17.7557f, 15.8645f,
				4.88924f, 18.0527f, 15.1454f, 4.88924f, 18.4005f, 16.2358f, 4.88924f, 18.1534f, 14.374f, 4.88924f,
				18.3965f, 12.5117f, 4.88924f, 18.7695f, 13.4095f, 4.88924f, 18.7716f, 15.3372f, 4.88924f, 18.8975f,
				14.3732f, 4.88924f, 11.5771f, 15.345f, 4.88924f, 11.5751f, 13.4173f, 4.88924f, 11.4492f, 14.3813f,
				4.88924f, 11.9461f, 12.5187f, 4.88924f, 12.294f, 13.6091f, 4.88924f, 12.5371f, 11.7468f, 4.88924f,
				12.5909f, 12.89f, 4.88924f, 13.3078f, 11.1541f, 4.88924f, 13.0638f, 12.2723f, 4.88924f, 13.6805f,
				11.7981f, 4.88924f, 14.2056f, 10.7811f, 4.88924f, 14.3989f, 11.4996f, 4.88924f, 15.1693f, 10.6531f,
				4.88924f, 15.1701f, 11.3972f, 4.88924f, 16.1333f, 10.779f, 4.88924f, 15.9415f, 11.4979f, 4.88924f,
				16.6606f, 11.7949f, 4.88924f, 17.0319f, 11.15f, 4.88924f, 17.2783f, 12.2678f, 4.88924f, 17.8038f,
				11.741f, 4.88924f, 17.7525f, 12.8844f, 4.88924f, 18.051f, 13.6028f, 4.88924f, 12.294f, 13.6091f,
				22.396f, 12.1933f, 14.3805f, 22.396f, 12.2957f, 15.1517f, 22.396f, 12.5942f, 15.8701f, 22.396f,
				13.0684f, 16.4867f, 22.396f, 13.6861f, 16.9597f, 22.396f, 14.4052f, 17.2566f, 22.396f, 15.1766f,
				17.3573f, 22.396f, 15.9477f, 17.2549f, 22.396f, 16.6661f, 16.9564f, 22.396f, 17.2828f, 16.4822f,
				22.396f, 17.7557f, 15.8645f, 22.396f, 18.0527f, 15.1454f, 22.396f, 18.1534f, 14.374f, 22.396f, 18.051f,
				13.6028f, 22.396f, 17.7525f, 12.8844f, 22.396f, 17.2783f, 12.2678f, 22.396f, 16.6606f, 11.7949f,
				22.396f, 15.9415f, 11.4979f, 22.396f, 15.1701f, 11.3972f, 22.396f, 14.3989f, 11.4996f, 22.396f,
				13.6805f, 11.7981f, 22.396f, 13.0638f, 12.2723f, 22.396f, 12.5909f, 12.89f, 22.396f };
		ByteBuffer vbb = ByteBuffer.allocateDirect(valueVertex.length * 4);
		vbb.order(ByteOrder.nativeOrder());
		mVertexBuffer[2] = vbb.asFloatBuffer();
		mVertexBuffer[2].put(valueVertex);
		mVertexBuffer[2].position(0);
	}

	public void setVertex3() {
		float valueVertex[] = { -19.1029f, 12.6283f, -6.25702e-005f, -19.1003f, 15.0374f, -6.25702e-005f, -19.2602f,
				13.833f, -6.25702e-005f, -18.6392f, 11.5053f, -6.25702e-005f, -18.6342f, 16.1593f, -6.25702e-005f,
				-17.9007f, 10.5406f, -6.25702e-005f, -17.8935f, 17.1224f, -6.25702e-005f, -16.9376f, 9.8f,
				-6.25702e-005f, -16.9288f, 17.8609f, -6.25702e-005f, -15.8156f, 9.3338f, -6.25702e-005f, -15.8059f,
				18.3247f, -6.25702e-005f, -14.6113f, 9.1739f, -6.25702e-005f, -14.6012f, 18.4819f, -6.25702e-005f,
				-13.4065f, 9.3312f, -6.25702e-005f, -13.3968f, 18.322f, -6.25702e-005f, -12.2836f, 9.7949f,
				-6.25702e-005f, -12.2748f, 17.8559f, -6.25702e-005f, -11.3189f, 10.5335f, -6.25702e-005f, -11.3118f,
				17.1152f, -6.25702e-005f, -10.5783f, 11.4966f, -6.25702e-005f, -10.5732f, 16.1506f, -6.25702e-005f,
				-10.1121f, 12.6185f, -6.25702e-005f, -10.1095f, 15.0276f, -6.25702e-005f, -9.95216f, 13.8229f,
				-6.25702e-005f, -18.6342f, 16.1593f, 1.57714f, -18.2024f, 14.7957f, 1.57714f, -18.3303f, 13.832f,
				1.57714f, -17.8935f, 17.1224f, 1.57714f, -17.8294f, 15.6935f, 1.57714f, -16.9288f, 17.8609f, 1.57714f,
				-17.2367f, 16.4642f, 1.57714f, -16.4648f, 17.0551f, 1.57714f, -15.8059f, 18.3247f, 1.57714f, -15.5662f,
				17.4262f, 1.57714f, -14.6012f, 18.4819f, 1.57714f, -14.6022f, 17.5521f, 1.57714f, -13.6384f, 17.4241f,
				1.57714f, -13.3968f, 18.322f, 1.57714f, -12.7407f, 17.0511f, 1.57714f, -12.2748f, 17.8559f, 1.57714f,
				-11.97f, 16.4584f, 1.57714f, -11.3118f, 17.1152f, 1.57714f, -11.379f, 15.6865f, 1.57714f, -11.0079f,
				14.7879f, 1.57714f, -10.5732f, 16.1506f, 1.57714f, -10.8821f, 13.8239f, 1.57714f, -10.5783f, 11.4966f,
				1.57714f, -10.1121f, 12.6185f, 1.57714f, -10.1095f, 15.0276f, 1.57714f, -9.95216f, 13.8229f, 1.57714f,
				-19.1003f, 15.0374f, 1.57714f, -19.1029f, 12.6283f, 1.57714f, -19.2602f, 13.833f, 1.57714f, -18.6392f,
				11.5053f, 1.57714f, -17.9007f, 10.5406f, 1.57714f, -18.2045f, 12.868f, 1.57714f, -17.8334f, 11.9694f,
				1.57714f, -16.9376f, 9.8f, 1.57714f, -17.2424f, 11.1974f, 1.57714f, -16.4718f, 10.6048f, 1.57714f,
				-15.8156f, 9.3338f, 1.57714f, -15.574f, 10.2318f, 1.57714f, -14.6113f, 9.1739f, 1.57714f, -14.6103f,
				10.1038f, 1.57714f, -13.4065f, 9.3312f, 1.57714f, -13.6462f, 10.2297f, 1.57714f, -12.7476f, 10.6007f,
				1.57714f, -12.2836f, 9.7949f, 1.57714f, -11.9757f, 11.1917f, 1.57714f, -11.3189f, 10.5335f, 1.57714f,
				-11.3831f, 11.9624f, 1.57714f, -11.01f, 12.8602f, 1.57714f, -17.8294f, 15.6935f, 4.88924f, -17.4839f,
				14.6023f, 4.88924f, -17.5863f, 13.8312f, 4.88924f, -17.2367f, 16.4642f, 4.88924f, -17.1854f, 15.3208f,
				4.88924f, -16.4648f, 17.0551f, 4.88924f, -16.7111f, 15.9374f, 4.88924f, -16.0934f, 16.4103f, 4.88924f,
				-15.5662f, 17.4262f, 4.88924f, -15.3744f, 16.7073f, 4.88924f, -14.6022f, 17.5521f, 4.88924f, -14.603f,
				16.808f, 4.88924f, -13.8318f, 16.7056f, 4.88924f, -13.6384f, 17.4241f, 4.88924f, -13.1134f, 16.4071f,
				4.88924f, -12.7407f, 17.0511f, 4.88924f, -12.4967f, 15.9329f, 4.88924f, -11.97f, 16.4584f, 4.88924f,
				-12.0238f, 15.3152f, 4.88924f, -11.7269f, 14.5961f, 4.88924f, -11.379f, 15.6865f, 4.88924f, -11.6262f,
				13.8247f, 4.88924f, -11.3831f, 11.9624f, 4.88924f, -11.01f, 12.8602f, 4.88924f, -11.0079f, 14.7879f,
				4.88924f, -10.8821f, 13.8239f, 4.88924f, -18.2024f, 14.7957f, 4.88924f, -18.2045f, 12.868f, 4.88924f,
				-18.3303f, 13.832f, 4.88924f, -17.8334f, 11.9694f, 4.88924f, -17.4856f, 13.0598f, 4.88924f, -17.2424f,
				11.1974f, 4.88924f, -17.1886f, 12.3407f, 4.88924f, -16.4718f, 10.6048f, 4.88924f, -16.7157f, 11.723f,
				4.88924f, -16.099f, 11.2488f, 4.88924f, -15.574f, 10.2318f, 4.88924f, -15.3806f, 10.9503f, 4.88924f,
				-14.6103f, 10.1038f, 4.88924f, -14.6094f, 10.8479f, 4.88924f, -13.6462f, 10.2297f, 4.88924f, -13.838f,
				10.9486f, 4.88924f, -13.119f, 11.2455f, 4.88924f, -12.7476f, 10.6007f, 4.88924f, -12.5013f, 11.7184f,
				4.88924f, -11.9757f, 11.1917f, 4.88924f, -12.027f, 12.3351f, 4.88924f, -11.7286f, 13.0535f, 4.88924f,
				-17.4856f, 13.0598f, 22.396f, -17.5863f, 13.8312f, 22.396f, -17.4839f, 14.6023f, 22.396f, -17.1854f,
				15.3208f, 22.396f, -16.7111f, 15.9374f, 22.396f, -16.0934f, 16.4103f, 22.396f, -15.3744f, 16.7073f,
				22.396f, -14.603f, 16.808f, 22.396f, -13.8318f, 16.7056f, 22.396f, -13.1134f, 16.4071f, 22.396f,
				-12.4967f, 15.9329f, 22.396f, -12.0238f, 15.3152f, 22.396f, -11.7269f, 14.5961f, 22.396f, -11.6262f,
				13.8247f, 22.396f, -11.7286f, 13.0535f, 22.396f, -12.027f, 12.3351f, 22.396f, -12.5013f, 11.7184f,
				22.396f, -13.119f, 11.2455f, 22.396f, -13.838f, 10.9486f, 22.396f, -14.6094f, 10.8479f, 22.396f,
				-15.3806f, 10.9503f, 22.396f, -16.099f, 11.2488f, 22.396f, -16.7157f, 11.723f, 22.396f, -17.1886f,
				12.3407f, 22.396f };
		ByteBuffer vbb = ByteBuffer.allocateDirect(valueVertex.length * 4);
		vbb.order(ByteOrder.nativeOrder());
		mVertexBuffer[3] = vbb.asFloatBuffer();
		mVertexBuffer[3].put(valueVertex);
		mVertexBuffer[3].position(0);
	}

	public void setVertex4() {
		float valueVertex[] = { -19.1061f, -15.035f, -6.2323e-005f, -19.1034f, -12.6259f, -6.2323e-005f, -19.2633f,
				-13.8303f, -6.2323e-005f, -18.6423f, -16.158f, -6.2323e-005f, -18.6373f, -11.504f, -6.2323e-005f,
				-17.9038f, -17.1227f, -6.2323e-005f, -17.8966f, -10.5409f, -6.2323e-005f, -16.9407f, -17.8633f,
				-6.2323e-005f, -16.932f, -9.80244f, -6.2323e-005f, -15.8188f, -18.3295f, -6.2323e-005f, -15.809f,
				-9.33864f, -6.2323e-005f, -14.6144f, -18.4894f, -6.2323e-005f, -14.6043f, -9.18144f, -6.2323e-005f,
				-13.4097f, -18.3321f, -6.2323e-005f, -13.3999f, -9.34134f, -6.2323e-005f, -12.2867f, -17.8684f,
				-6.2323e-005f, -12.278f, -9.80744f, -6.2323e-005f, -11.322f, -17.1298f, -6.2323e-005f, -11.3149f,
				-10.5481f, -6.2323e-005f, -10.5814f, -16.1667f, -6.2323e-005f, -10.5763f, -11.5127f, -6.2323e-005f,
				-10.1152f, -15.0448f, -6.2323e-005f, -10.1126f, -12.6357f, -6.2323e-005f, -9.95526f, -13.8404f,
				-6.2323e-005f, -18.6373f, -11.504f, 1.57084f, -18.2055f, -12.8676f, 1.57084f, -18.3335f, -13.8313f,
				1.57084f, -17.8966f, -10.5409f, 1.57084f, -17.8325f, -11.9698f, 1.57084f, -16.932f, -9.80244f,
				1.57084f, -17.2398f, -11.1991f, 1.57084f, -16.4679f, -10.6082f, 1.57084f, -15.809f, -9.33864f,
				1.57084f, -15.5693f, -10.2371f, 1.57084f, -14.6043f, -9.18144f, 1.57084f, -14.6053f, -10.1112f,
				1.57084f, -13.6415f, -10.2392f, 1.57084f, -13.3999f, -9.34134f, 1.57084f, -12.7438f, -10.6122f,
				1.57084f, -12.278f, -9.80744f, 1.57084f, -11.9731f, -11.2049f, 1.57084f, -11.3149f, -10.5481f,
				1.57084f, -11.3821f, -11.9768f, 1.57084f, -11.0111f, -12.8754f, 1.57084f, -10.5763f, -11.5127f,
				1.57084f, -10.8852f, -13.8394f, 1.57084f, -10.5814f, -16.1667f, 1.57084f, -10.1152f, -15.0448f,
				1.57084f, -10.1126f, -12.6357f, 1.57084f, -9.95526f, -13.8404f, 1.57084f, -19.1034f, -12.6259f,
				1.57084f, -19.1061f, -15.035f, 1.57084f, -19.2633f, -13.8303f, 1.57084f, -18.6423f, -16.158f, 1.57084f,
				-17.9038f, -17.1227f, 1.57084f, -18.2076f, -14.7953f, 1.57084f, -17.8365f, -15.6939f, 1.57084f,
				-16.9407f, -17.8633f, 1.57084f, -17.2455f, -16.4659f, 1.57084f, -16.4749f, -17.0585f, 1.57084f,
				-15.8188f, -18.3295f, 1.57084f, -15.5771f, -17.4315f, 1.57084f, -14.6144f, -18.4894f, 1.57084f,
				-14.6134f, -17.5595f, 1.57084f, -13.4097f, -18.3321f, 1.57084f, -13.6494f, -17.4336f, 1.57084f,
				-12.7508f, -17.0626f, 1.57084f, -12.2867f, -17.8684f, 1.57084f, -11.9788f, -16.4716f, 1.57084f,
				-11.322f, -17.1298f, 1.57084f, -11.3862f, -15.7009f, 1.57084f, -11.0131f, -14.8031f, 1.57084f,
				-17.8325f, -11.9698f, 4.86984f, -17.487f, -13.0609f, 4.86984f, -17.5894f, -13.8321f, 4.86984f,
				-17.2398f, -11.1991f, 4.86984f, -17.1885f, -12.3425f, 4.86984f, -16.4679f, -10.6082f, 4.86984f,
				-16.7142f, -11.7259f, 4.86984f, -16.0965f, -11.253f, 4.86984f, -15.5693f, -10.2371f, 4.86984f,
				-15.3775f, -10.956f, 4.86984f, -14.6053f, -10.1112f, 4.86984f, -14.6061f, -10.8553f, 4.86984f,
				-13.8349f, -10.9577f, 4.86984f, -13.6415f, -10.2392f, 4.86984f, -13.1165f, -11.2562f, 4.86984f,
				-12.7438f, -10.6122f, 4.86984f, -12.4998f, -11.7304f, 4.86984f, -11.9731f, -11.2049f, 4.86984f,
				-12.0269f, -12.3481f, 4.86984f, -11.73f, -13.0672f, 4.86984f, -11.3821f, -11.9768f, 4.86984f,
				-11.6293f, -13.8386f, 4.86984f, -11.3862f, -15.7009f, 4.86984f, -11.0131f, -14.8031f, 4.86984f,
				-11.0111f, -12.8754f, 4.86984f, -10.8852f, -13.8394f, 4.86984f, -18.2055f, -12.8676f, 4.86984f,
				-18.2076f, -14.7953f, 4.86984f, -18.3335f, -13.8313f, 4.86984f, -17.8365f, -15.6939f, 4.86984f,
				-17.4887f, -14.6035f, 4.86984f, -17.2455f, -16.4659f, 4.86984f, -17.1917f, -15.3226f, 4.86984f,
				-16.4749f, -17.0585f, 4.86984f, -16.7188f, -15.9403f, 4.86984f, -16.1021f, -16.4145f, 4.86984f,
				-15.5771f, -17.4315f, 4.86984f, -15.3837f, -16.713f, 4.86984f, -14.6134f, -17.5595f, 4.86984f,
				-14.6126f, -16.8154f, 4.86984f, -13.6494f, -17.4336f, 4.86984f, -13.8411f, -16.7147f, 4.86984f,
				-13.1221f, -16.4178f, 4.86984f, -12.7508f, -17.0626f, 4.86984f, -12.5044f, -15.9449f, 4.86984f,
				-11.9788f, -16.4716f, 4.86984f, -12.0302f, -15.3282f, 4.86984f, -11.7317f, -14.6098f, 4.86984f,
				-17.4887f, -14.6035f, 22.3072f, -17.5894f, -13.8321f, 22.3072f, -17.487f, -13.0609f, 22.3072f,
				-17.1885f, -12.3425f, 22.3072f, -16.7142f, -11.7259f, 22.3072f, -16.0965f, -11.253f, 22.3072f,
				-15.3775f, -10.956f, 22.3072f, -14.6061f, -10.8553f, 22.3072f, -13.8349f, -10.9577f, 22.3072f,
				-13.1165f, -11.2562f, 22.3072f, -12.4998f, -11.7304f, 22.3072f, -12.0269f, -12.3481f, 22.3072f,
				-11.73f, -13.0672f, 22.3072f, -11.6293f, -13.8386f, 22.3072f, -11.7317f, -14.6098f, 22.3072f,
				-12.0302f, -15.3282f, 22.3072f, -12.5044f, -15.9449f, 22.3072f, -13.1221f, -16.4178f, 22.3072f,
				-13.8411f, -16.7147f, 22.3072f, -14.6126f, -16.8154f, 22.3072f, -15.3837f, -16.713f, 22.3072f,
				-16.1021f, -16.4145f, 22.3072f, -16.7188f, -15.9403f, 22.3072f, -17.1917f, -15.3226f, 22.3072f };
		ByteBuffer vbb = ByteBuffer.allocateDirect(valueVertex.length * 4);
		vbb.order(ByteOrder.nativeOrder());
		mVertexBuffer[4] = vbb.asFloatBuffer();
		mVertexBuffer[4].put(valueVertex);
		mVertexBuffer[4].position(0);
	}

	public void setVertex5() {
		float valueVertex[] = { -24.2199f, -13.0799f, 23.5551f, -18.2633f, -5.91511f, 23.5551f, -24.4289f, -11.628f,
				23.5551f, -23.8322f, -14.4982f, 23.5551f, -23.271f, -15.8634f, 23.5551f, -22.5444f, -17.1562f,
				23.5551f, -21.6623f, -18.3587f, 23.5551f, -20.6371f, -19.4542f, 23.5551f, -19.4831f, -20.4274f,
				23.5551f, -18.2163f, -21.2648f, 23.5551f, -17.5148f, -5.14082f, 23.5551f, -16.8544f, -21.9546f,
				23.5551f, -16.883f, -4.27781f, 23.5551f, -16.3792f, -3.34202f, 23.5551f, -15.4164f, -22.4873f,
				23.5551f, -16.0126f, -2.35032f, 23.5551f, -15.79f, -1.32092f, 23.5551f, -15.7153f, -0.272315f,
				23.5551f, 17.3723f, -22.0341f, 23.5551f, 16.4203f, -0.272315f, 23.5551f, 15.9159f, -22.5486f, 23.5551f,
				16.4922f, -1.31392f, 23.5551f, 16.7066f, -2.33762f, 23.5551f, 17.0599f, -3.32601f, 23.5551f, 17.546f,
				-4.26222f, 23.5551f, 18.7515f, -21.3543f, 23.5551f, 18.1567f, -5.13022f, 23.5551f, 18.8814f, -5.91511f,
				23.5551f, 20.0327f, -20.5196f, 23.5551f, 24.8958f, -11.628f, 23.5551f, 21.1968f, -19.5423f, 23.5551f,
				22.2263f, -18.4372f, 23.5551f, 23.1056f, -17.221f, 23.5551f, 23.8217f, -15.9117f, 23.5551f, 24.3637f,
				-14.5292f, 23.5551f, 24.7236f, -13.0941f, 23.5551f, -18.2633f, 5.37048f, 23.5551f, -24.3037f, 12.4642f,
				23.5551f, -24.4289f, 10.9433f, 23.5551f, -23.974f, 13.9573f, 23.5551f, -23.4452f, 15.398f, 23.5551f,
				-22.7262f, 16.7624f, 23.5551f, -21.8288f, 18.0279f, 23.5551f, -20.7678f, 19.1738f, 23.5551f, -19.5608f,
				20.181f, 23.5551f, -18.2276f, 21.0329f, 23.5551f, -17.5148f, 4.59609f, 23.5551f, -16.7904f, 21.7154f,
				23.5551f, -16.883f, 3.73319f, 23.5551f, -16.3792f, 2.79738f, 23.5551f, -15.2728f, 22.2173f, 23.5551f,
				-16.0126f, 1.80568f, 23.5551f, -15.79f, 0.776185f, 23.5551f, -13.9223f, -22.8553f, 23.5551f, -13.6999f,
				22.5303f, 23.5551f, -12.3929f, -23.0538f, 23.5551f, -12.0977f, 22.6492f, 23.5551f, -6.07971f,
				-17.3409f, 23.5551f, -5.93211f, 16.7927f, 23.5551f, -5.19071f, -16.6329f, 23.5551f, -5.07471f,
				16.0785f, 23.5551f, -4.21441f, -16.0374f, 23.5551f, -4.12651f, 15.4767f, 23.5551f, -3.16661f, -15.564f,
				23.5551f, -3.10351f, 14.9977f, 23.5551f, -2.06411f, -15.2204f, 23.5551f, -2.02351f, 14.6495f, 23.5551f,
				-0.924613f, -15.0119f, 23.5551f, -0.904813f, 14.4381f, 23.5551f, 0.233487f, -14.9421f, 23.5551f,
				0.233487f, 14.3673f, 23.5551f, 1.39149f, -15.0119f, 23.5551f, 1.37169f, 14.4381f, 23.5551f, 2.49039f,
				14.6495f, 23.5551f, 2.53099f, -15.2204f, 23.5551f, 3.57049f, 14.9977f, 23.5551f, 3.63349f, -15.564f,
				23.5551f, 4.59339f, 15.4767f, 23.5551f, 4.68129f, -16.0374f, 23.5551f, 5.54169f, 16.0785f, 23.5551f,
				5.65759f, -16.6329f, 23.5551f, 6.39909f, 16.7927f, 23.5551f, 6.54659f, -17.3409f, 23.5551f, 12.5646f,
				22.6492f, 23.5551f, 12.8598f, -23.0538f, 23.5551f, 14.1378f, 22.4603f, 23.5551f, 14.4042f, -22.8902f,
				23.5551f, 15.6758f, 22.094f, 23.5551f, 17.1567f, 21.5557f, 23.5551f, 16.4922f, 0.769185f, 23.5551f,
				16.7066f, 1.79288f, 23.5551f, 17.0599f, 2.78138f, 23.5551f, 17.546f, 3.71758f, 23.5551f, 18.559f,
				20.8532f, 23.5551f, 18.1567f, 4.58559f, 23.5551f, 18.8814f, 5.37048f, 23.5551f, 19.8628f, 19.9964f,
				23.5551f, 24.8958f, 10.9433f, 23.5551f, 21.0492f, 18.9977f, 23.5551f, 22.1013f, 17.8714f, 23.5551f,
				23.0038f, 16.6337f, 23.5551f, 23.744f, 15.3025f, 23.5551f, 24.311f, 13.8967f, 23.5551f, 24.6968f,
				12.4366f, 23.5551f };
		ByteBuffer vbb = ByteBuffer.allocateDirect(valueVertex.length * 4);
		vbb.order(ByteOrder.nativeOrder());
		mVertexBuffer[5] = vbb.asFloatBuffer();
		mVertexBuffer[5].put(valueVertex);
		mVertexBuffer[5].position(0);
	}

	public void setVertex6() {
		float valueVertex[] = { -24.2199f, -13.0799f, 23.5551f, -18.2633f, -5.91511f, 23.5551f, -24.4289f, -11.628f,
				23.5551f, -23.8322f, -14.4982f, 23.5551f, -23.271f, -15.8634f, 23.5551f, -22.5444f, -17.1562f,
				23.5551f, -21.6623f, -18.3587f, 23.5551f, -20.6371f, -19.4542f, 23.5551f, -19.4831f, -20.4274f,
				23.5551f, -18.2163f, -21.2648f, 23.5551f, -17.5148f, -5.14082f, 23.5551f, -16.8544f, -21.9546f,
				23.5551f, -16.883f, -4.27781f, 23.5551f, -16.3792f, -3.34202f, 23.5551f, -15.4164f, -22.4873f,
				23.5551f, -16.0126f, -2.35032f, 23.5551f, -15.79f, -1.32092f, 23.5551f, -15.7153f, -0.272315f,
				23.5551f, -18.2633f, 5.37048f, 23.5551f, -24.3037f, 12.4642f, 23.5551f, -24.4289f, 10.9433f, 23.5551f,
				-23.974f, 13.9573f, 23.5551f, -23.4452f, 15.398f, 23.5551f, -22.7262f, 16.7624f, 23.5551f, -21.8288f,
				18.0279f, 23.5551f, -20.7678f, 19.1738f, 23.5551f, -19.5608f, 20.181f, 23.5551f, -18.2276f, 21.0329f,
				23.5551f, -17.5148f, 4.59609f, 23.5551f, -16.7904f, 21.7154f, 23.5551f, -16.883f, 3.73319f, 23.5551f,
				-16.3792f, 2.79738f, 23.5551f, -15.2728f, 22.2173f, 23.5551f, -16.0126f, 1.80568f, 23.5551f, -15.79f,
				0.776185f, 23.5551f, -13.9223f, -22.8553f, 23.5551f, -13.6999f, 22.5303f, 23.5551f, -12.3929f,
				-23.0538f, 23.5551f, -12.0977f, 22.6492f, 23.5551f, -6.07971f, -17.3409f, 23.5551f, -5.93211f,
				16.7927f, 23.5551f, -5.19071f, -16.6329f, 23.5551f, -5.07471f, 16.0785f, 23.5551f, -4.21441f,
				-16.0374f, 23.5551f, -4.12651f, 15.4767f, 23.5551f, -3.16661f, -15.564f, 23.5551f, -3.10351f, 14.9977f,
				23.5551f, -2.06411f, -15.2204f, 23.5551f, -2.02351f, 14.6495f, 23.5551f, -0.924613f, -15.0119f,
				23.5551f, -0.904813f, 14.4381f, 23.5551f, 0.233487f, -14.9421f, 23.5551f, -24.7675f, -17.1115f,
				20.2542f, -25.3578f, -15.5987f, 20.2542f, -24.0031f, -18.5442f, 20.2542f, -25.7657f, -14.027f,
				20.2542f, -25.9856f, -12.4181f, 20.2542f, -19.4996f, -6.08732f, 20.2542f, -18.7122f, -5.22922f,
				20.2542f, -18.0475f, -4.27291f, 20.2542f, -17.5175f, -3.23591f, 20.2542f, -17.1319f, -2.13702f,
				20.2542f, -16.8977f, -0.996215f, 20.2542f, -16.8191f, 0.165785f, 20.2542f, -16.8977f, 1.32768f,
				20.2542f, -17.1319f, 2.46859f, 20.2542f, -17.5175f, 3.56748f, 20.2542f, -18.0475f, 4.60449f, 20.2542f,
				-18.7122f, 5.56078f, 20.2542f, -19.4996f, 6.41888f, 20.2542f, -25.9856f, 12.5944f, 20.2542f, -25.8538f,
				14.2798f, 20.2542f, -25.507f, 15.9345f, 20.2542f, -24.9508f, 17.5309f, 20.2542f, -24.1944f, 19.0429f,
				20.2542f, -23.2504f, 20.4453f, 20.2542f, -22.1342f, 21.7151f, 20.2542f, -20.8645f, 22.8312f, 20.2542f,
				-19.462f, 23.7753f, 20.2542f, -17.9501f, 24.5316f, 20.2542f, -16.3536f, 25.0878f, 20.2542f, -14.699f,
				25.4347f, 20.2542f, -13.0136f, 25.5664f, 20.2542f, -6.52761f, 19.0765f, 20.2542f, -5.62561f, 18.2851f,
				20.2542f, -4.62811f, 17.6182f, 20.2542f, -3.55201f, 17.0873f, 20.2542f, -2.41581f, 16.7015f, 20.2542f,
				-0.0416128f, -16.0906f, 20.2542f, -1.25981f, -16.168f, 20.2542f, -2.45851f, -16.399f, 20.2542f,
				-3.61831f, -16.7798f, 20.2542f, -4.72061f, -17.3044f, 20.2542f, -5.74761f, -17.9643f, 20.2542f,
				-6.68281f, -18.7488f, 20.2542f, -13.324f, -25.0796f, 20.2542f, -14.9329f, -24.8597f, 20.2542f,
				-16.5047f, -24.4518f, 20.2542f, -18.0175f, -23.8615f, 20.2542f, -19.4501f, -23.0971f, 20.2542f,
				-20.7827f, -22.1692f, 20.2542f, -21.9967f, -21.0908f, 20.2542f, -23.0752f, -19.8768f, 20.2542f,
				-1.23891f, 16.4673f, 20.2542f, -0.0416128f, 16.3888f, 20.2542f, -25.8538f, 14.2798f, 18.2228f,
				-19.4996f, 6.41888f, 18.2228f, -25.9856f, 12.5944f, 18.2228f, -25.507f, 15.9345f, 18.2228f, -24.9508f,
				17.5309f, 18.2228f, -24.1944f, 19.0429f, 18.2228f, -18.7122f, 5.56078f, 18.2228f, -18.0475f, 4.60449f,
				18.2228f, -17.5175f, 3.56748f, 18.2228f, -17.1319f, 2.46859f, 18.2228f, -16.8977f, 1.32768f, 18.2228f,
				-16.8191f, 0.165785f, 18.2228f, -19.4996f, -6.08732f, 18.2228f, -25.7657f, -14.027f, 18.2228f,
				-25.9856f, -12.4181f, 18.2228f, -25.3578f, -15.5987f, 18.2228f, -24.7675f, -17.1115f, 18.2228f,
				-18.7122f, -5.22922f, 18.2228f, -18.0475f, -4.27291f, 18.2228f, -17.5175f, -3.23591f, 18.2228f,
				-17.1319f, -2.13702f, 18.2228f, -16.8977f, -0.996215f, 18.2228f, -23.2504f, 20.4453f, 18.2228f,
				-22.1342f, 21.7151f, 18.2228f, -20.8645f, 22.8312f, 18.2228f, -19.462f, 23.7753f, 18.2228f, -17.9501f,
				24.5316f, 18.2228f, -16.3536f, 25.0878f, 18.2228f, -14.699f, 25.4347f, 18.2228f, -13.0136f, 25.5664f,
				18.2228f, -6.52761f, 19.0765f, 18.2228f, -5.62561f, 18.2851f, 18.2228f, -4.62811f, 17.6182f, 18.2228f,
				-3.55201f, 17.0873f, 18.2228f, -2.41581f, 16.7015f, 18.2228f, -1.23891f, 16.4673f, 18.2228f,
				-0.0416128f, 16.3888f, 18.2228f, -24.0031f, -18.5442f, 18.2228f, -23.0752f, -19.8768f, 18.2228f,
				-21.9967f, -21.0908f, 18.2228f, -20.7827f, -22.1692f, 18.2228f, -19.4501f, -23.0971f, 18.2228f,
				-18.0175f, -23.8615f, 18.2228f, -16.5047f, -24.4518f, 18.2228f, -14.9329f, -24.8597f, 18.2228f,
				-13.324f, -25.0796f, 18.2228f, -6.68281f, -18.7488f, 18.2228f, -5.74761f, -17.9643f, 18.2228f,
				-4.72061f, -17.3044f, 18.2228f, -3.61831f, -16.7798f, 18.2228f, -2.45851f, -16.399f, 18.2228f,
				-1.25981f, -16.168f, 18.2228f, -0.0416128f, -16.0906f, 18.2228f };
		ByteBuffer vbb = ByteBuffer.allocateDirect(valueVertex.length * 4);
		vbb.order(ByteOrder.nativeOrder());
		mVertexBuffer[6] = vbb.asFloatBuffer();
		mVertexBuffer[6].put(valueVertex);
		mVertexBuffer[6].position(0);
	}

	public void setFace0() {
		byte valueFace[] = { (byte) 54, (byte) 17, (byte) 55, (byte) 11, (byte) 17, (byte) 54, (byte) 55, (byte) 16,
				(byte) 56, (byte) 17, (byte) 16, (byte) 55, (byte) 56, (byte) 15, (byte) 57, (byte) 16, (byte) 15,
				(byte) 56, (byte) 57, (byte) 14, (byte) 58, (byte) 15, (byte) 14, (byte) 57, (byte) 58, (byte) 13,
				(byte) 59, (byte) 58, (byte) 14, (byte) 13, (byte) 59, (byte) 12, (byte) 60, (byte) 59, (byte) 13,
				(byte) 12, (byte) 60, (byte) 12, (byte) 61, (byte) 12, (byte) 10, (byte) 61, (byte) 61, (byte) 10,
				(byte) 62, (byte) 10, (byte) 7, (byte) 62, (byte) 62, (byte) 7, (byte) 63, (byte) 7, (byte) 0,
				(byte) 63, (byte) 63, (byte) 0, (byte) 64, (byte) 0, (byte) 2, (byte) 64, (byte) 64, (byte) 2,
				(byte) 65, (byte) 2, (byte) 36, (byte) 65, (byte) 65, (byte) 36, (byte) 66, (byte) 36, (byte) 34,
				(byte) 66, (byte) 32, (byte) 67, (byte) 68, (byte) 30, (byte) 67, (byte) 32, (byte) 30, (byte) 69,
				(byte) 67, (byte) 28, (byte) 69, (byte) 30, (byte) 28, (byte) 70, (byte) 69, (byte) 26, (byte) 70,
				(byte) 28, (byte) 26, (byte) 71, (byte) 70, (byte) 24, (byte) 71, (byte) 26, (byte) 24, (byte) 72,
				(byte) 71, (byte) 21, (byte) 72, (byte) 24, (byte) 21, (byte) 73, (byte) 72, (byte) 19, (byte) 73,
				(byte) 21, (byte) 20, (byte) 74, (byte) 18, (byte) 75, (byte) 74, (byte) 20, (byte) 22, (byte) 75,
				(byte) 20, (byte) 76, (byte) 75, (byte) 22, (byte) 23, (byte) 76, (byte) 22, (byte) 77, (byte) 76,
				(byte) 23, (byte) 25, (byte) 77, (byte) 23, (byte) 78, (byte) 77, (byte) 25, (byte) 27, (byte) 78,
				(byte) 25, (byte) 79, (byte) 78, (byte) 27, (byte) 79, (byte) 27, (byte) 29, (byte) 80, (byte) 79,
				(byte) 29, (byte) 80, (byte) 29, (byte) 31, (byte) 81, (byte) 82, (byte) 33, (byte) 81, (byte) 33,
				(byte) 35, (byte) 83, (byte) 81, (byte) 35, (byte) 83, (byte) 35, (byte) 37, (byte) 84, (byte) 83,
				(byte) 37, (byte) 84, (byte) 37, (byte) 38, (byte) 85, (byte) 84, (byte) 38, (byte) 85, (byte) 38,
				(byte) 43, (byte) 86, (byte) 85, (byte) 43, (byte) 86, (byte) 43, (byte) 46, (byte) 87, (byte) 86,
				(byte) 46, (byte) 87, (byte) 46, (byte) 48, (byte) 88, (byte) 87, (byte) 49, (byte) 49, (byte) 87,
				(byte) 48, (byte) 89, (byte) 88, (byte) 50, (byte) 50, (byte) 88, (byte) 49, (byte) 90, (byte) 89,
				(byte) 51, (byte) 89, (byte) 50, (byte) 51, (byte) 90, (byte) 52, (byte) 91, (byte) 90, (byte) 51,
				(byte) 52, (byte) 91, (byte) 53, (byte) 92, (byte) 91, (byte) 52, (byte) 53, (byte) 92, (byte) 47,
				(byte) 93, (byte) 92, (byte) 53, (byte) 47, (byte) 94, (byte) 44, (byte) 95, (byte) 94, (byte) 45,
				(byte) 44, (byte) 95, (byte) 42, (byte) 96, (byte) 95, (byte) 44, (byte) 42, (byte) 96, (byte) 41,
				(byte) 97, (byte) 96, (byte) 42, (byte) 41, (byte) 97, (byte) 40, (byte) 98, (byte) 97, (byte) 41,
				(byte) 40, (byte) 98, (byte) 39, (byte) 99, (byte) 98, (byte) 40, (byte) 39, (byte) 99, (byte) 1,
				(byte) 100, (byte) 99, (byte) 39, (byte) 1, (byte) 100, (byte) 3, (byte) 101, (byte) 100, (byte) 1,
				(byte) 3, (byte) 101, (byte) 4, (byte) 102, (byte) 101, (byte) 3, (byte) 4, (byte) 102, (byte) 5,
				(byte) 103, (byte) 102, (byte) 4, (byte) 5, (byte) 103, (byte) 6, (byte) 104, (byte) 103, (byte) 5,
				(byte) 6, (byte) 104, (byte) 8, (byte) 105, (byte) 104, (byte) 6, (byte) 8, (byte) 105, (byte) 9,
				(byte) 106, (byte) 8, (byte) 9, (byte) 105, (byte) 139, (byte) 54, (byte) 140, (byte) 54, (byte) 139,
				(byte) 106, (byte) 140, (byte) 55, (byte) 143, (byte) 55, (byte) 140, (byte) 54, (byte) 143, (byte) 56,
				(byte) 142, (byte) 56, (byte) 143, (byte) 55, (byte) 142, (byte) 57, (byte) 141, (byte) 57, (byte) 142,
				(byte) 56, (byte) 141, (byte) 58, (byte) 159, (byte) 58, (byte) 141, (byte) 57, (byte) 159, (byte) 59,
				(byte) 158, (byte) 59, (byte) 159, (byte) 58, (byte) 158, (byte) 60, (byte) 157, (byte) 60, (byte) 158,
				(byte) 59, (byte) 60, (byte) 156, (byte) 157, (byte) 156, (byte) 60, (byte) 61, (byte) 61, (byte) 155,
				(byte) 156, (byte) 155, (byte) 61, (byte) 62, (byte) 62, (byte) 154, (byte) 155, (byte) 154, (byte) 62,
				(byte) 63, (byte) 63, (byte) 153, (byte) 154, (byte) 153, (byte) 63, (byte) 64, (byte) 64, (byte) 152,
				(byte) 153, (byte) 152, (byte) 64, (byte) 65, (byte) 65, (byte) 151, (byte) 152, (byte) 151, (byte) 65,
				(byte) 66, (byte) 66, (byte) 150, (byte) 151, (byte) 150, (byte) 66, (byte) 68, (byte) 68, (byte) 149,
				(byte) 150, (byte) 149, (byte) 68, (byte) 67, (byte) 67, (byte) 148, (byte) 149, (byte) 148, (byte) 67,
				(byte) 69, (byte) 69, (byte) 147, (byte) 148, (byte) 147, (byte) 69, (byte) 70, (byte) 70, (byte) 146,
				(byte) 147, (byte) 146, (byte) 70, (byte) 71, (byte) 71, (byte) 145, (byte) 146, (byte) 145, (byte) 71,
				(byte) 72, (byte) 72, (byte) 144, (byte) 145, (byte) 144, (byte) 72, (byte) 73, (byte) 74, (byte) 108,
				(byte) 107, (byte) 108, (byte) 74, (byte) 75, (byte) 75, (byte) 109, (byte) 108, (byte) 109, (byte) 75,
				(byte) 76, (byte) 76, (byte) 110, (byte) 109, (byte) 110, (byte) 76, (byte) 77, (byte) 77, (byte) 111,
				(byte) 110, (byte) 111, (byte) 77, (byte) 78, (byte) 78, (byte) 112, (byte) 111, (byte) 112, (byte) 78,
				(byte) 79, (byte) 79, (byte) 113, (byte) 112, (byte) 113, (byte) 79, (byte) 80, (byte) 82, (byte) 113,
				(byte) 80, (byte) 113, (byte) 82, (byte) 114, (byte) 82, (byte) 115, (byte) 114, (byte) 115, (byte) 82,
				(byte) 81, (byte) 81, (byte) 116, (byte) 115, (byte) 116, (byte) 81, (byte) 83, (byte) 83, (byte) 117,
				(byte) 116, (byte) 117, (byte) 83, (byte) 84, (byte) 84, (byte) 118, (byte) 117, (byte) 118, (byte) 84,
				(byte) 85, (byte) 85, (byte) 119, (byte) 118, (byte) 119, (byte) 85, (byte) 86, (byte) 86, (byte) 120,
				(byte) 119, (byte) 120, (byte) 86, (byte) 87, (byte) 120, (byte) 88, (byte) 121, (byte) 88, (byte) 120,
				(byte) 87, (byte) 121, (byte) 89, (byte) 122, (byte) 89, (byte) 121, (byte) 88, (byte) 122, (byte) 90,
				(byte) 123, (byte) 90, (byte) 122, (byte) 89, (byte) 123, (byte) 91, (byte) 132, (byte) 91, (byte) 123,
				(byte) 90, (byte) 132, (byte) 92, (byte) 133, (byte) 92, (byte) 132, (byte) 91, (byte) 133, (byte) 93,
				(byte) 131, (byte) 93, (byte) 133, (byte) 92, (byte) 93, (byte) 130, (byte) 131, (byte) 130, (byte) 93,
				(byte) 94, (byte) 130, (byte) 95, (byte) 129, (byte) 95, (byte) 130, (byte) 94, (byte) 129, (byte) 96,
				(byte) 128, (byte) 96, (byte) 129, (byte) 95, (byte) 128, (byte) 97, (byte) 127, (byte) 97, (byte) 128,
				(byte) 96, (byte) 127, (byte) 98, (byte) 126, (byte) 98, (byte) 127, (byte) 97, (byte) 126, (byte) 99,
				(byte) 125, (byte) 99, (byte) 126, (byte) 98, (byte) 125, (byte) 100, (byte) 124, (byte) 100,
				(byte) 125, (byte) 99, (byte) 124, (byte) 101, (byte) 134, (byte) 101, (byte) 124, (byte) 100,
				(byte) 134, (byte) 102, (byte) 135, (byte) 102, (byte) 134, (byte) 101, (byte) 135, (byte) 103,
				(byte) 136, (byte) 103, (byte) 135, (byte) 102, (byte) 136, (byte) 104, (byte) 137, (byte) 104,
				(byte) 136, (byte) 103, (byte) 137, (byte) 105, (byte) 138, (byte) 105, (byte) 137, (byte) 104,
				(byte) 138, (byte) 106, (byte) 139, (byte) 106, (byte) 138, (byte) 105, (byte) 32, (byte) 68,
				(byte) 66, (byte) 32, (byte) 66, (byte) 34, (byte) 82, (byte) 31, (byte) 33, (byte) 82, (byte) 80,
				(byte) 31, (byte) 11, (byte) 54, (byte) 9, (byte) 9, (byte) 54, (byte) 106, (byte) 45, (byte) 93,
				(byte) 47, (byte) 45, (byte) 94, (byte) 93 };
		size[0] = valueFace.length;

		mIndexBuffer[0] = ByteBuffer.allocateDirect(valueFace.length);
		mIndexBuffer[0].put(valueFace);
		mIndexBuffer[0].position(0);
	}

	public void setFace1() {
		byte valueFace[] = { (byte) 26, (byte) 25, (byte) 24, (byte) 27, (byte) 24, (byte) 25, (byte) 28, (byte) 27,
				(byte) 25, (byte) 29, (byte) 27, (byte) 28, (byte) 30, (byte) 29, (byte) 28, (byte) 31, (byte) 29,
				(byte) 30, (byte) 32, (byte) 29, (byte) 31, (byte) 33, (byte) 32, (byte) 31, (byte) 34, (byte) 32,
				(byte) 33, (byte) 35, (byte) 34, (byte) 33, (byte) 36, (byte) 34, (byte) 35, (byte) 37, (byte) 34,
				(byte) 36, (byte) 38, (byte) 37, (byte) 36, (byte) 39, (byte) 37, (byte) 38, (byte) 40, (byte) 39,
				(byte) 38, (byte) 41, (byte) 39, (byte) 40, (byte) 42, (byte) 41, (byte) 40, (byte) 43, (byte) 41,
				(byte) 42, (byte) 44, (byte) 41, (byte) 43, (byte) 45, (byte) 44, (byte) 43, (byte) 46, (byte) 44,
				(byte) 45, (byte) 47, (byte) 44, (byte) 46, (byte) 48, (byte) 44, (byte) 47, (byte) 49, (byte) 48,
				(byte) 47, (byte) 52, (byte) 51, (byte) 50, (byte) 53, (byte) 50, (byte) 51, (byte) 24, (byte) 50,
				(byte) 53, (byte) 54, (byte) 24, (byte) 53, (byte) 55, (byte) 24, (byte) 54, (byte) 26, (byte) 24,
				(byte) 55, (byte) 56, (byte) 55, (byte) 54, (byte) 57, (byte) 56, (byte) 54, (byte) 58, (byte) 56,
				(byte) 57, (byte) 59, (byte) 58, (byte) 57, (byte) 60, (byte) 59, (byte) 57, (byte) 61, (byte) 59,
				(byte) 60, (byte) 62, (byte) 61, (byte) 60, (byte) 63, (byte) 61, (byte) 62, (byte) 64, (byte) 63,
				(byte) 62, (byte) 65, (byte) 63, (byte) 64, (byte) 66, (byte) 65, (byte) 64, (byte) 67, (byte) 66,
				(byte) 64, (byte) 68, (byte) 66, (byte) 67, (byte) 69, (byte) 68, (byte) 67, (byte) 70, (byte) 68,
				(byte) 69, (byte) 71, (byte) 70, (byte) 69, (byte) 46, (byte) 71, (byte) 69, (byte) 45, (byte) 71,
				(byte) 46, (byte) 5, (byte) 54, (byte) 3, (byte) 53, (byte) 3, (byte) 54, (byte) 57, (byte) 54,
				(byte) 7, (byte) 5, (byte) 7, (byte) 54, (byte) 60, (byte) 57, (byte) 9, (byte) 7, (byte) 9, (byte) 57,
				(byte) 62, (byte) 60, (byte) 11, (byte) 9, (byte) 11, (byte) 60, (byte) 64, (byte) 62, (byte) 13,
				(byte) 11, (byte) 13, (byte) 62, (byte) 67, (byte) 64, (byte) 15, (byte) 13, (byte) 15, (byte) 64,
				(byte) 69, (byte) 67, (byte) 17, (byte) 15, (byte) 17, (byte) 67, (byte) 69, (byte) 17, (byte) 46,
				(byte) 19, (byte) 46, (byte) 17, (byte) 46, (byte) 19, (byte) 47, (byte) 21, (byte) 47, (byte) 19,
				(byte) 47, (byte) 21, (byte) 49, (byte) 23, (byte) 49, (byte) 21, (byte) 49, (byte) 23, (byte) 48,
				(byte) 22, (byte) 48, (byte) 23, (byte) 48, (byte) 22, (byte) 44, (byte) 20, (byte) 44, (byte) 22,
				(byte) 44, (byte) 20, (byte) 41, (byte) 18, (byte) 41, (byte) 20, (byte) 39, (byte) 41, (byte) 16,
				(byte) 18, (byte) 16, (byte) 41, (byte) 37, (byte) 39, (byte) 14, (byte) 16, (byte) 14, (byte) 39,
				(byte) 34, (byte) 37, (byte) 12, (byte) 14, (byte) 12, (byte) 37, (byte) 32, (byte) 34, (byte) 10,
				(byte) 12, (byte) 10, (byte) 34, (byte) 29, (byte) 32, (byte) 8, (byte) 10, (byte) 8, (byte) 32,
				(byte) 27, (byte) 29, (byte) 6, (byte) 8, (byte) 6, (byte) 29, (byte) 4, (byte) 24, (byte) 6,
				(byte) 27, (byte) 6, (byte) 24, (byte) 1, (byte) 50, (byte) 4, (byte) 24, (byte) 4, (byte) 50,
				(byte) 2, (byte) 52, (byte) 1, (byte) 50, (byte) 1, (byte) 52, (byte) 0, (byte) 51, (byte) 2,
				(byte) 52, (byte) 2, (byte) 51, (byte) 3, (byte) 53, (byte) 0, (byte) 51, (byte) 0, (byte) 53,
				(byte) 74, (byte) 73, (byte) 72, (byte) 75, (byte) 72, (byte) 73, (byte) 76, (byte) 75, (byte) 73,
				(byte) 77, (byte) 75, (byte) 76, (byte) 78, (byte) 77, (byte) 76, (byte) 79, (byte) 77, (byte) 78,
				(byte) 80, (byte) 77, (byte) 79, (byte) 81, (byte) 80, (byte) 79, (byte) 82, (byte) 80, (byte) 81,
				(byte) 83, (byte) 82, (byte) 81, (byte) 84, (byte) 82, (byte) 83, (byte) 85, (byte) 82, (byte) 84,
				(byte) 86, (byte) 85, (byte) 84, (byte) 87, (byte) 85, (byte) 86, (byte) 88, (byte) 87, (byte) 86,
				(byte) 89, (byte) 87, (byte) 88, (byte) 90, (byte) 89, (byte) 88, (byte) 91, (byte) 89, (byte) 90,
				(byte) 92, (byte) 89, (byte) 91, (byte) 93, (byte) 92, (byte) 91, (byte) 94, (byte) 92, (byte) 93,
				(byte) 95, (byte) 92, (byte) 94, (byte) 96, (byte) 92, (byte) 95, (byte) 97, (byte) 96, (byte) 95,
				(byte) 100, (byte) 99, (byte) 98, (byte) 101, (byte) 98, (byte) 99, (byte) 72, (byte) 98, (byte) 101,
				(byte) 102, (byte) 72, (byte) 101, (byte) 103, (byte) 102, (byte) 101, (byte) 74, (byte) 72,
				(byte) 102, (byte) 104, (byte) 102, (byte) 103, (byte) 105, (byte) 104, (byte) 103, (byte) 106,
				(byte) 104, (byte) 105, (byte) 107, (byte) 106, (byte) 105, (byte) 108, (byte) 107, (byte) 105,
				(byte) 109, (byte) 107, (byte) 108, (byte) 110, (byte) 109, (byte) 108, (byte) 111, (byte) 109,
				(byte) 110, (byte) 112, (byte) 111, (byte) 110, (byte) 113, (byte) 111, (byte) 112, (byte) 114,
				(byte) 113, (byte) 112, (byte) 115, (byte) 114, (byte) 112, (byte) 116, (byte) 114, (byte) 115,
				(byte) 117, (byte) 116, (byte) 115, (byte) 118, (byte) 116, (byte) 117, (byte) 119, (byte) 118,
				(byte) 117, (byte) 94, (byte) 119, (byte) 117, (byte) 93, (byte) 119, (byte) 94, (byte) 56, (byte) 101,
				(byte) 55, (byte) 99, (byte) 55, (byte) 101, (byte) 55, (byte) 99, (byte) 26, (byte) 100, (byte) 26,
				(byte) 99, (byte) 26, (byte) 100, (byte) 25, (byte) 98, (byte) 25, (byte) 100, (byte) 25, (byte) 98,
				(byte) 28, (byte) 72, (byte) 28, (byte) 98, (byte) 28, (byte) 72, (byte) 30, (byte) 75, (byte) 30,
				(byte) 72, (byte) 75, (byte) 77, (byte) 30, (byte) 31, (byte) 30, (byte) 77, (byte) 77, (byte) 80,
				(byte) 31, (byte) 33, (byte) 31, (byte) 80, (byte) 80, (byte) 82, (byte) 33, (byte) 35, (byte) 33,
				(byte) 82, (byte) 82, (byte) 85, (byte) 35, (byte) 36, (byte) 35, (byte) 85, (byte) 85, (byte) 87,
				(byte) 36, (byte) 38, (byte) 36, (byte) 87, (byte) 87, (byte) 89, (byte) 38, (byte) 40, (byte) 38,
				(byte) 89, (byte) 92, (byte) 42, (byte) 89, (byte) 40, (byte) 89, (byte) 42, (byte) 96, (byte) 43,
				(byte) 92, (byte) 42, (byte) 92, (byte) 43, (byte) 97, (byte) 45, (byte) 96, (byte) 43, (byte) 96,
				(byte) 45, (byte) 95, (byte) 71, (byte) 97, (byte) 45, (byte) 97, (byte) 71, (byte) 94, (byte) 70,
				(byte) 95, (byte) 71, (byte) 95, (byte) 70, (byte) 117, (byte) 68, (byte) 94, (byte) 70, (byte) 94,
				(byte) 68, (byte) 117, (byte) 115, (byte) 68, (byte) 66, (byte) 68, (byte) 115, (byte) 115, (byte) 112,
				(byte) 66, (byte) 65, (byte) 66, (byte) 112, (byte) 112, (byte) 110, (byte) 65, (byte) 63, (byte) 65,
				(byte) 110, (byte) 110, (byte) 108, (byte) 63, (byte) 61, (byte) 63, (byte) 108, (byte) 108,
				(byte) 105, (byte) 61, (byte) 59, (byte) 61, (byte) 105, (byte) 105, (byte) 103, (byte) 59, (byte) 58,
				(byte) 59, (byte) 103, (byte) 58, (byte) 103, (byte) 56, (byte) 101, (byte) 56, (byte) 103, (byte) 102,
				(byte) 120, (byte) 74, (byte) 121, (byte) 74, (byte) 120, (byte) 74, (byte) 121, (byte) 73, (byte) 122,
				(byte) 73, (byte) 121, (byte) 73, (byte) 122, (byte) 76, (byte) 123, (byte) 76, (byte) 122, (byte) 76,
				(byte) 123, (byte) 78, (byte) 124, (byte) 78, (byte) 123, (byte) 124, (byte) 125, (byte) 78, (byte) 79,
				(byte) 78, (byte) 125, (byte) 125, (byte) 126, (byte) 79, (byte) 81, (byte) 79, (byte) 126, (byte) 126,
				(byte) 127, (byte) 81, (byte) 83, (byte) 81, (byte) 127, (byte) 127, (byte) 128, (byte) 83, (byte) 84,
				(byte) 83, (byte) 128, (byte) 128, (byte) 129, (byte) 84, (byte) 86, (byte) 84, (byte) 129, (byte) 129,
				(byte) 130, (byte) 86, (byte) 88, (byte) 86, (byte) 130, (byte) 131, (byte) 90, (byte) 130, (byte) 88,
				(byte) 130, (byte) 90, (byte) 132, (byte) 91, (byte) 131, (byte) 90, (byte) 131, (byte) 91, (byte) 133,
				(byte) 93, (byte) 132, (byte) 91, (byte) 132, (byte) 93, (byte) 134, (byte) 119, (byte) 133, (byte) 93,
				(byte) 133, (byte) 119, (byte) 135, (byte) 118, (byte) 134, (byte) 119, (byte) 134, (byte) 118,
				(byte) 136, (byte) 116, (byte) 135, (byte) 118, (byte) 135, (byte) 116, (byte) 136, (byte) 137,
				(byte) 116, (byte) 114, (byte) 116, (byte) 137, (byte) 137, (byte) 138, (byte) 114, (byte) 113,
				(byte) 114, (byte) 138, (byte) 138, (byte) 139, (byte) 113, (byte) 111, (byte) 113, (byte) 139,
				(byte) 139, (byte) 140, (byte) 111, (byte) 109, (byte) 111, (byte) 140, (byte) 140, (byte) 141,
				(byte) 109, (byte) 107, (byte) 109, (byte) 141, (byte) 141, (byte) 142, (byte) 107, (byte) 106,
				(byte) 107, (byte) 142, (byte) 106, (byte) 142, (byte) 104, (byte) 143, (byte) 104, (byte) 142,
				(byte) 104, (byte) 143, (byte) 102, (byte) 120, (byte) 102, (byte) 143 };
		size[1] = valueFace.length;

		mIndexBuffer[1] = ByteBuffer.allocateDirect(valueFace.length);
		mIndexBuffer[1].put(valueFace);
		mIndexBuffer[1].position(0);
	}

	public void setFace2() {
		byte valueFace[] = { (byte) 26, (byte) 25, (byte) 24, (byte) 27, (byte) 24, (byte) 25, (byte) 28, (byte) 27,
				(byte) 25, (byte) 29, (byte) 27, (byte) 28, (byte) 30, (byte) 29, (byte) 28, (byte) 31, (byte) 29,
				(byte) 30, (byte) 32, (byte) 29, (byte) 31, (byte) 33, (byte) 32, (byte) 31, (byte) 34, (byte) 32,
				(byte) 33, (byte) 35, (byte) 34, (byte) 33, (byte) 36, (byte) 34, (byte) 35, (byte) 37, (byte) 34,
				(byte) 36, (byte) 38, (byte) 37, (byte) 36, (byte) 39, (byte) 37, (byte) 38, (byte) 40, (byte) 39,
				(byte) 38, (byte) 41, (byte) 39, (byte) 40, (byte) 42, (byte) 41, (byte) 40, (byte) 43, (byte) 41,
				(byte) 42, (byte) 44, (byte) 41, (byte) 43, (byte) 45, (byte) 44, (byte) 43, (byte) 46, (byte) 44,
				(byte) 45, (byte) 47, (byte) 44, (byte) 46, (byte) 48, (byte) 44, (byte) 47, (byte) 49, (byte) 48,
				(byte) 47, (byte) 52, (byte) 51, (byte) 50, (byte) 53, (byte) 50, (byte) 51, (byte) 24, (byte) 50,
				(byte) 53, (byte) 54, (byte) 24, (byte) 53, (byte) 55, (byte) 24, (byte) 54, (byte) 26, (byte) 24,
				(byte) 55, (byte) 56, (byte) 55, (byte) 54, (byte) 57, (byte) 56, (byte) 54, (byte) 58, (byte) 56,
				(byte) 57, (byte) 59, (byte) 58, (byte) 57, (byte) 60, (byte) 59, (byte) 57, (byte) 61, (byte) 59,
				(byte) 60, (byte) 62, (byte) 61, (byte) 60, (byte) 63, (byte) 61, (byte) 62, (byte) 64, (byte) 63,
				(byte) 62, (byte) 65, (byte) 63, (byte) 64, (byte) 66, (byte) 65, (byte) 64, (byte) 67, (byte) 66,
				(byte) 64, (byte) 68, (byte) 66, (byte) 67, (byte) 69, (byte) 68, (byte) 67, (byte) 70, (byte) 68,
				(byte) 69, (byte) 71, (byte) 70, (byte) 69, (byte) 46, (byte) 71, (byte) 69, (byte) 45, (byte) 71,
				(byte) 46, (byte) 5, (byte) 54, (byte) 3, (byte) 53, (byte) 3, (byte) 54, (byte) 57, (byte) 54,
				(byte) 7, (byte) 5, (byte) 7, (byte) 54, (byte) 60, (byte) 57, (byte) 9, (byte) 7, (byte) 9, (byte) 57,
				(byte) 62, (byte) 60, (byte) 11, (byte) 9, (byte) 11, (byte) 60, (byte) 64, (byte) 62, (byte) 13,
				(byte) 11, (byte) 13, (byte) 62, (byte) 67, (byte) 64, (byte) 15, (byte) 13, (byte) 15, (byte) 64,
				(byte) 69, (byte) 67, (byte) 17, (byte) 15, (byte) 17, (byte) 67, (byte) 69, (byte) 17, (byte) 46,
				(byte) 19, (byte) 46, (byte) 17, (byte) 46, (byte) 19, (byte) 47, (byte) 21, (byte) 47, (byte) 19,
				(byte) 47, (byte) 21, (byte) 49, (byte) 23, (byte) 49, (byte) 21, (byte) 49, (byte) 23, (byte) 48,
				(byte) 22, (byte) 48, (byte) 23, (byte) 48, (byte) 22, (byte) 44, (byte) 20, (byte) 44, (byte) 22,
				(byte) 44, (byte) 20, (byte) 41, (byte) 18, (byte) 41, (byte) 20, (byte) 39, (byte) 41, (byte) 16,
				(byte) 18, (byte) 16, (byte) 41, (byte) 37, (byte) 39, (byte) 14, (byte) 16, (byte) 14, (byte) 39,
				(byte) 34, (byte) 37, (byte) 12, (byte) 14, (byte) 12, (byte) 37, (byte) 32, (byte) 34, (byte) 10,
				(byte) 12, (byte) 10, (byte) 34, (byte) 29, (byte) 32, (byte) 8, (byte) 10, (byte) 8, (byte) 32,
				(byte) 27, (byte) 29, (byte) 6, (byte) 8, (byte) 6, (byte) 29, (byte) 4, (byte) 24, (byte) 6,
				(byte) 27, (byte) 6, (byte) 24, (byte) 1, (byte) 50, (byte) 4, (byte) 24, (byte) 4, (byte) 50,
				(byte) 2, (byte) 52, (byte) 1, (byte) 50, (byte) 1, (byte) 52, (byte) 0, (byte) 51, (byte) 2,
				(byte) 52, (byte) 2, (byte) 51, (byte) 3, (byte) 53, (byte) 0, (byte) 51, (byte) 0, (byte) 53,
				(byte) 74, (byte) 73, (byte) 72, (byte) 75, (byte) 72, (byte) 73, (byte) 76, (byte) 75, (byte) 73,
				(byte) 77, (byte) 75, (byte) 76, (byte) 78, (byte) 77, (byte) 76, (byte) 79, (byte) 77, (byte) 78,
				(byte) 80, (byte) 77, (byte) 79, (byte) 81, (byte) 80, (byte) 79, (byte) 82, (byte) 80, (byte) 81,
				(byte) 83, (byte) 82, (byte) 81, (byte) 84, (byte) 82, (byte) 83, (byte) 85, (byte) 82, (byte) 84,
				(byte) 86, (byte) 85, (byte) 84, (byte) 87, (byte) 85, (byte) 86, (byte) 88, (byte) 87, (byte) 86,
				(byte) 89, (byte) 87, (byte) 88, (byte) 90, (byte) 89, (byte) 88, (byte) 91, (byte) 89, (byte) 90,
				(byte) 92, (byte) 89, (byte) 91, (byte) 93, (byte) 92, (byte) 91, (byte) 94, (byte) 92, (byte) 93,
				(byte) 95, (byte) 92, (byte) 94, (byte) 96, (byte) 92, (byte) 95, (byte) 97, (byte) 96, (byte) 95,
				(byte) 100, (byte) 99, (byte) 98, (byte) 101, (byte) 98, (byte) 99, (byte) 72, (byte) 98, (byte) 101,
				(byte) 102, (byte) 72, (byte) 101, (byte) 103, (byte) 102, (byte) 101, (byte) 74, (byte) 72,
				(byte) 102, (byte) 104, (byte) 102, (byte) 103, (byte) 105, (byte) 104, (byte) 103, (byte) 106,
				(byte) 104, (byte) 105, (byte) 107, (byte) 106, (byte) 105, (byte) 108, (byte) 107, (byte) 105,
				(byte) 109, (byte) 107, (byte) 108, (byte) 110, (byte) 109, (byte) 108, (byte) 111, (byte) 109,
				(byte) 110, (byte) 112, (byte) 111, (byte) 110, (byte) 113, (byte) 111, (byte) 112, (byte) 114,
				(byte) 113, (byte) 112, (byte) 115, (byte) 114, (byte) 112, (byte) 116, (byte) 114, (byte) 115,
				(byte) 117, (byte) 116, (byte) 115, (byte) 118, (byte) 116, (byte) 117, (byte) 119, (byte) 118,
				(byte) 117, (byte) 94, (byte) 119, (byte) 117, (byte) 93, (byte) 119, (byte) 94, (byte) 56, (byte) 101,
				(byte) 55, (byte) 99, (byte) 55, (byte) 101, (byte) 55, (byte) 99, (byte) 26, (byte) 100, (byte) 26,
				(byte) 99, (byte) 26, (byte) 100, (byte) 25, (byte) 98, (byte) 25, (byte) 100, (byte) 25, (byte) 98,
				(byte) 28, (byte) 72, (byte) 28, (byte) 98, (byte) 28, (byte) 72, (byte) 30, (byte) 75, (byte) 30,
				(byte) 72, (byte) 75, (byte) 77, (byte) 30, (byte) 31, (byte) 30, (byte) 77, (byte) 77, (byte) 80,
				(byte) 31, (byte) 33, (byte) 31, (byte) 80, (byte) 80, (byte) 82, (byte) 33, (byte) 35, (byte) 33,
				(byte) 82, (byte) 82, (byte) 85, (byte) 35, (byte) 36, (byte) 35, (byte) 85, (byte) 85, (byte) 87,
				(byte) 36, (byte) 38, (byte) 36, (byte) 87, (byte) 87, (byte) 89, (byte) 38, (byte) 40, (byte) 38,
				(byte) 89, (byte) 92, (byte) 42, (byte) 89, (byte) 40, (byte) 89, (byte) 42, (byte) 96, (byte) 43,
				(byte) 92, (byte) 42, (byte) 92, (byte) 43, (byte) 97, (byte) 45, (byte) 96, (byte) 43, (byte) 96,
				(byte) 45, (byte) 95, (byte) 71, (byte) 97, (byte) 45, (byte) 97, (byte) 71, (byte) 94, (byte) 70,
				(byte) 95, (byte) 71, (byte) 95, (byte) 70, (byte) 117, (byte) 68, (byte) 94, (byte) 70, (byte) 94,
				(byte) 68, (byte) 117, (byte) 115, (byte) 68, (byte) 66, (byte) 68, (byte) 115, (byte) 115, (byte) 112,
				(byte) 66, (byte) 65, (byte) 66, (byte) 112, (byte) 112, (byte) 110, (byte) 65, (byte) 63, (byte) 65,
				(byte) 110, (byte) 110, (byte) 108, (byte) 63, (byte) 61, (byte) 63, (byte) 108, (byte) 108,
				(byte) 105, (byte) 61, (byte) 59, (byte) 61, (byte) 105, (byte) 105, (byte) 103, (byte) 59, (byte) 58,
				(byte) 59, (byte) 103, (byte) 58, (byte) 103, (byte) 56, (byte) 101, (byte) 56, (byte) 103, (byte) 102,
				(byte) 120, (byte) 74, (byte) 121, (byte) 74, (byte) 120, (byte) 74, (byte) 121, (byte) 73, (byte) 122,
				(byte) 73, (byte) 121, (byte) 73, (byte) 122, (byte) 76, (byte) 123, (byte) 76, (byte) 122, (byte) 76,
				(byte) 123, (byte) 78, (byte) 124, (byte) 78, (byte) 123, (byte) 124, (byte) 125, (byte) 78, (byte) 79,
				(byte) 78, (byte) 125, (byte) 125, (byte) 126, (byte) 79, (byte) 81, (byte) 79, (byte) 126, (byte) 126,
				(byte) 127, (byte) 81, (byte) 83, (byte) 81, (byte) 127, (byte) 127, (byte) 128, (byte) 83, (byte) 84,
				(byte) 83, (byte) 128, (byte) 128, (byte) 129, (byte) 84, (byte) 86, (byte) 84, (byte) 129, (byte) 129,
				(byte) 130, (byte) 86, (byte) 88, (byte) 86, (byte) 130, (byte) 131, (byte) 90, (byte) 130, (byte) 88,
				(byte) 130, (byte) 90, (byte) 132, (byte) 91, (byte) 131, (byte) 90, (byte) 131, (byte) 91, (byte) 133,
				(byte) 93, (byte) 132, (byte) 91, (byte) 132, (byte) 93, (byte) 134, (byte) 119, (byte) 133, (byte) 93,
				(byte) 133, (byte) 119, (byte) 135, (byte) 118, (byte) 134, (byte) 119, (byte) 134, (byte) 118,
				(byte) 136, (byte) 116, (byte) 135, (byte) 118, (byte) 135, (byte) 116, (byte) 136, (byte) 137,
				(byte) 116, (byte) 114, (byte) 116, (byte) 137, (byte) 137, (byte) 138, (byte) 114, (byte) 113,
				(byte) 114, (byte) 138, (byte) 138, (byte) 139, (byte) 113, (byte) 111, (byte) 113, (byte) 139,
				(byte) 139, (byte) 140, (byte) 111, (byte) 109, (byte) 111, (byte) 140, (byte) 140, (byte) 141,
				(byte) 109, (byte) 107, (byte) 109, (byte) 141, (byte) 141, (byte) 142, (byte) 107, (byte) 106,
				(byte) 107, (byte) 142, (byte) 106, (byte) 142, (byte) 104, (byte) 143, (byte) 104, (byte) 142,
				(byte) 104, (byte) 143, (byte) 102, (byte) 120, (byte) 102, (byte) 143 };
		size[2] = valueFace.length;

		mIndexBuffer[2] = ByteBuffer.allocateDirect(valueFace.length);
		mIndexBuffer[2].put(valueFace);
		mIndexBuffer[2].position(0);
	}

	public void setFace3() {
		byte valueFace[] = { (byte) 26, (byte) 25, (byte) 24, (byte) 27, (byte) 24, (byte) 25, (byte) 28, (byte) 27,
				(byte) 25, (byte) 29, (byte) 27, (byte) 28, (byte) 30, (byte) 29, (byte) 28, (byte) 31, (byte) 29,
				(byte) 30, (byte) 32, (byte) 29, (byte) 31, (byte) 33, (byte) 32, (byte) 31, (byte) 34, (byte) 32,
				(byte) 33, (byte) 35, (byte) 34, (byte) 33, (byte) 36, (byte) 34, (byte) 35, (byte) 37, (byte) 34,
				(byte) 36, (byte) 38, (byte) 37, (byte) 36, (byte) 39, (byte) 37, (byte) 38, (byte) 40, (byte) 39,
				(byte) 38, (byte) 41, (byte) 39, (byte) 40, (byte) 42, (byte) 41, (byte) 40, (byte) 43, (byte) 41,
				(byte) 42, (byte) 44, (byte) 41, (byte) 43, (byte) 45, (byte) 44, (byte) 43, (byte) 46, (byte) 44,
				(byte) 45, (byte) 47, (byte) 44, (byte) 46, (byte) 48, (byte) 44, (byte) 47, (byte) 49, (byte) 48,
				(byte) 47, (byte) 52, (byte) 51, (byte) 50, (byte) 53, (byte) 50, (byte) 51, (byte) 24, (byte) 50,
				(byte) 53, (byte) 54, (byte) 24, (byte) 53, (byte) 55, (byte) 24, (byte) 54, (byte) 26, (byte) 24,
				(byte) 55, (byte) 56, (byte) 55, (byte) 54, (byte) 57, (byte) 56, (byte) 54, (byte) 58, (byte) 56,
				(byte) 57, (byte) 59, (byte) 58, (byte) 57, (byte) 60, (byte) 59, (byte) 57, (byte) 61, (byte) 59,
				(byte) 60, (byte) 62, (byte) 61, (byte) 60, (byte) 63, (byte) 61, (byte) 62, (byte) 64, (byte) 63,
				(byte) 62, (byte) 65, (byte) 63, (byte) 64, (byte) 66, (byte) 65, (byte) 64, (byte) 67, (byte) 66,
				(byte) 64, (byte) 68, (byte) 66, (byte) 67, (byte) 69, (byte) 68, (byte) 67, (byte) 70, (byte) 68,
				(byte) 69, (byte) 71, (byte) 70, (byte) 69, (byte) 46, (byte) 71, (byte) 69, (byte) 45, (byte) 71,
				(byte) 46, (byte) 5, (byte) 54, (byte) 3, (byte) 53, (byte) 3, (byte) 54, (byte) 57, (byte) 54,
				(byte) 7, (byte) 5, (byte) 7, (byte) 54, (byte) 60, (byte) 57, (byte) 9, (byte) 7, (byte) 9, (byte) 57,
				(byte) 62, (byte) 60, (byte) 11, (byte) 9, (byte) 11, (byte) 60, (byte) 64, (byte) 62, (byte) 13,
				(byte) 11, (byte) 13, (byte) 62, (byte) 67, (byte) 64, (byte) 15, (byte) 13, (byte) 15, (byte) 64,
				(byte) 69, (byte) 67, (byte) 17, (byte) 15, (byte) 17, (byte) 67, (byte) 69, (byte) 17, (byte) 46,
				(byte) 19, (byte) 46, (byte) 17, (byte) 46, (byte) 19, (byte) 47, (byte) 21, (byte) 47, (byte) 19,
				(byte) 47, (byte) 21, (byte) 49, (byte) 23, (byte) 49, (byte) 21, (byte) 49, (byte) 23, (byte) 48,
				(byte) 22, (byte) 48, (byte) 23, (byte) 48, (byte) 22, (byte) 44, (byte) 20, (byte) 44, (byte) 22,
				(byte) 44, (byte) 20, (byte) 41, (byte) 18, (byte) 41, (byte) 20, (byte) 39, (byte) 41, (byte) 16,
				(byte) 18, (byte) 16, (byte) 41, (byte) 37, (byte) 39, (byte) 14, (byte) 16, (byte) 14, (byte) 39,
				(byte) 34, (byte) 37, (byte) 12, (byte) 14, (byte) 12, (byte) 37, (byte) 32, (byte) 34, (byte) 10,
				(byte) 12, (byte) 10, (byte) 34, (byte) 29, (byte) 32, (byte) 8, (byte) 10, (byte) 8, (byte) 32,
				(byte) 27, (byte) 29, (byte) 6, (byte) 8, (byte) 6, (byte) 29, (byte) 4, (byte) 24, (byte) 6,
				(byte) 27, (byte) 6, (byte) 24, (byte) 1, (byte) 50, (byte) 4, (byte) 24, (byte) 4, (byte) 50,
				(byte) 2, (byte) 52, (byte) 1, (byte) 50, (byte) 1, (byte) 52, (byte) 0, (byte) 51, (byte) 2,
				(byte) 52, (byte) 2, (byte) 51, (byte) 3, (byte) 53, (byte) 0, (byte) 51, (byte) 0, (byte) 53,
				(byte) 74, (byte) 73, (byte) 72, (byte) 75, (byte) 72, (byte) 73, (byte) 76, (byte) 75, (byte) 73,
				(byte) 77, (byte) 75, (byte) 76, (byte) 78, (byte) 77, (byte) 76, (byte) 79, (byte) 77, (byte) 78,
				(byte) 80, (byte) 77, (byte) 79, (byte) 81, (byte) 80, (byte) 79, (byte) 82, (byte) 80, (byte) 81,
				(byte) 83, (byte) 82, (byte) 81, (byte) 84, (byte) 82, (byte) 83, (byte) 85, (byte) 82, (byte) 84,
				(byte) 86, (byte) 85, (byte) 84, (byte) 87, (byte) 85, (byte) 86, (byte) 88, (byte) 87, (byte) 86,
				(byte) 89, (byte) 87, (byte) 88, (byte) 90, (byte) 89, (byte) 88, (byte) 91, (byte) 89, (byte) 90,
				(byte) 92, (byte) 89, (byte) 91, (byte) 93, (byte) 92, (byte) 91, (byte) 94, (byte) 92, (byte) 93,
				(byte) 95, (byte) 92, (byte) 94, (byte) 96, (byte) 92, (byte) 95, (byte) 97, (byte) 96, (byte) 95,
				(byte) 100, (byte) 99, (byte) 98, (byte) 101, (byte) 98, (byte) 99, (byte) 72, (byte) 98, (byte) 101,
				(byte) 102, (byte) 72, (byte) 101, (byte) 103, (byte) 102, (byte) 101, (byte) 74, (byte) 72,
				(byte) 102, (byte) 104, (byte) 102, (byte) 103, (byte) 105, (byte) 104, (byte) 103, (byte) 106,
				(byte) 104, (byte) 105, (byte) 107, (byte) 106, (byte) 105, (byte) 108, (byte) 107, (byte) 105,
				(byte) 109, (byte) 107, (byte) 108, (byte) 110, (byte) 109, (byte) 108, (byte) 111, (byte) 109,
				(byte) 110, (byte) 112, (byte) 111, (byte) 110, (byte) 113, (byte) 111, (byte) 112, (byte) 114,
				(byte) 113, (byte) 112, (byte) 115, (byte) 114, (byte) 112, (byte) 116, (byte) 114, (byte) 115,
				(byte) 117, (byte) 116, (byte) 115, (byte) 118, (byte) 116, (byte) 117, (byte) 119, (byte) 118,
				(byte) 117, (byte) 94, (byte) 119, (byte) 117, (byte) 93, (byte) 119, (byte) 94, (byte) 56, (byte) 101,
				(byte) 55, (byte) 99, (byte) 55, (byte) 101, (byte) 55, (byte) 99, (byte) 26, (byte) 100, (byte) 26,
				(byte) 99, (byte) 26, (byte) 100, (byte) 25, (byte) 98, (byte) 25, (byte) 100, (byte) 25, (byte) 98,
				(byte) 28, (byte) 72, (byte) 28, (byte) 98, (byte) 28, (byte) 72, (byte) 30, (byte) 75, (byte) 30,
				(byte) 72, (byte) 75, (byte) 77, (byte) 30, (byte) 31, (byte) 30, (byte) 77, (byte) 77, (byte) 80,
				(byte) 31, (byte) 33, (byte) 31, (byte) 80, (byte) 80, (byte) 82, (byte) 33, (byte) 35, (byte) 33,
				(byte) 82, (byte) 82, (byte) 85, (byte) 35, (byte) 36, (byte) 35, (byte) 85, (byte) 85, (byte) 87,
				(byte) 36, (byte) 38, (byte) 36, (byte) 87, (byte) 87, (byte) 89, (byte) 38, (byte) 40, (byte) 38,
				(byte) 89, (byte) 92, (byte) 42, (byte) 89, (byte) 40, (byte) 89, (byte) 42, (byte) 96, (byte) 43,
				(byte) 92, (byte) 42, (byte) 92, (byte) 43, (byte) 97, (byte) 45, (byte) 96, (byte) 43, (byte) 96,
				(byte) 45, (byte) 95, (byte) 71, (byte) 97, (byte) 45, (byte) 97, (byte) 71, (byte) 94, (byte) 70,
				(byte) 95, (byte) 71, (byte) 95, (byte) 70, (byte) 117, (byte) 68, (byte) 94, (byte) 70, (byte) 94,
				(byte) 68, (byte) 117, (byte) 115, (byte) 68, (byte) 66, (byte) 68, (byte) 115, (byte) 115, (byte) 112,
				(byte) 66, (byte) 65, (byte) 66, (byte) 112, (byte) 112, (byte) 110, (byte) 65, (byte) 63, (byte) 65,
				(byte) 110, (byte) 110, (byte) 108, (byte) 63, (byte) 61, (byte) 63, (byte) 108, (byte) 108,
				(byte) 105, (byte) 61, (byte) 59, (byte) 61, (byte) 105, (byte) 105, (byte) 103, (byte) 59, (byte) 58,
				(byte) 59, (byte) 103, (byte) 58, (byte) 103, (byte) 56, (byte) 101, (byte) 56, (byte) 103, (byte) 102,
				(byte) 120, (byte) 74, (byte) 121, (byte) 74, (byte) 120, (byte) 74, (byte) 121, (byte) 73, (byte) 122,
				(byte) 73, (byte) 121, (byte) 73, (byte) 122, (byte) 76, (byte) 123, (byte) 76, (byte) 122, (byte) 76,
				(byte) 123, (byte) 78, (byte) 124, (byte) 78, (byte) 123, (byte) 124, (byte) 125, (byte) 78, (byte) 79,
				(byte) 78, (byte) 125, (byte) 125, (byte) 126, (byte) 79, (byte) 81, (byte) 79, (byte) 126, (byte) 126,
				(byte) 127, (byte) 81, (byte) 83, (byte) 81, (byte) 127, (byte) 127, (byte) 128, (byte) 83, (byte) 84,
				(byte) 83, (byte) 128, (byte) 128, (byte) 129, (byte) 84, (byte) 86, (byte) 84, (byte) 129, (byte) 129,
				(byte) 130, (byte) 86, (byte) 88, (byte) 86, (byte) 130, (byte) 131, (byte) 90, (byte) 130, (byte) 88,
				(byte) 130, (byte) 90, (byte) 132, (byte) 91, (byte) 131, (byte) 90, (byte) 131, (byte) 91, (byte) 133,
				(byte) 93, (byte) 132, (byte) 91, (byte) 132, (byte) 93, (byte) 134, (byte) 119, (byte) 133, (byte) 93,
				(byte) 133, (byte) 119, (byte) 135, (byte) 118, (byte) 134, (byte) 119, (byte) 134, (byte) 118,
				(byte) 136, (byte) 116, (byte) 135, (byte) 118, (byte) 135, (byte) 116, (byte) 136, (byte) 137,
				(byte) 116, (byte) 114, (byte) 116, (byte) 137, (byte) 137, (byte) 138, (byte) 114, (byte) 113,
				(byte) 114, (byte) 138, (byte) 138, (byte) 139, (byte) 113, (byte) 111, (byte) 113, (byte) 139,
				(byte) 139, (byte) 140, (byte) 111, (byte) 109, (byte) 111, (byte) 140, (byte) 140, (byte) 141,
				(byte) 109, (byte) 107, (byte) 109, (byte) 141, (byte) 141, (byte) 142, (byte) 107, (byte) 106,
				(byte) 107, (byte) 142, (byte) 106, (byte) 142, (byte) 104, (byte) 143, (byte) 104, (byte) 142,
				(byte) 104, (byte) 143, (byte) 102, (byte) 120, (byte) 102, (byte) 143 };
		size[3] = valueFace.length;

		mIndexBuffer[3] = ByteBuffer.allocateDirect(valueFace.length);
		mIndexBuffer[3].put(valueFace);
		mIndexBuffer[3].position(0);
	}

	public void setFace4() {
		byte valueFace[] = { (byte) 26, (byte) 25, (byte) 24, (byte) 27, (byte) 24, (byte) 25, (byte) 28, (byte) 27,
				(byte) 25, (byte) 29, (byte) 27, (byte) 28, (byte) 30, (byte) 29, (byte) 28, (byte) 31, (byte) 29,
				(byte) 30, (byte) 32, (byte) 29, (byte) 31, (byte) 33, (byte) 32, (byte) 31, (byte) 34, (byte) 32,
				(byte) 33, (byte) 35, (byte) 34, (byte) 33, (byte) 36, (byte) 34, (byte) 35, (byte) 37, (byte) 34,
				(byte) 36, (byte) 38, (byte) 37, (byte) 36, (byte) 39, (byte) 37, (byte) 38, (byte) 40, (byte) 39,
				(byte) 38, (byte) 41, (byte) 39, (byte) 40, (byte) 42, (byte) 41, (byte) 40, (byte) 43, (byte) 41,
				(byte) 42, (byte) 44, (byte) 41, (byte) 43, (byte) 45, (byte) 44, (byte) 43, (byte) 46, (byte) 44,
				(byte) 45, (byte) 47, (byte) 44, (byte) 46, (byte) 48, (byte) 44, (byte) 47, (byte) 49, (byte) 48,
				(byte) 47, (byte) 52, (byte) 51, (byte) 50, (byte) 53, (byte) 50, (byte) 51, (byte) 24, (byte) 50,
				(byte) 53, (byte) 54, (byte) 24, (byte) 53, (byte) 55, (byte) 24, (byte) 54, (byte) 26, (byte) 24,
				(byte) 55, (byte) 56, (byte) 55, (byte) 54, (byte) 57, (byte) 56, (byte) 54, (byte) 58, (byte) 56,
				(byte) 57, (byte) 59, (byte) 58, (byte) 57, (byte) 60, (byte) 59, (byte) 57, (byte) 61, (byte) 59,
				(byte) 60, (byte) 62, (byte) 61, (byte) 60, (byte) 63, (byte) 61, (byte) 62, (byte) 64, (byte) 63,
				(byte) 62, (byte) 65, (byte) 63, (byte) 64, (byte) 66, (byte) 65, (byte) 64, (byte) 67, (byte) 66,
				(byte) 64, (byte) 68, (byte) 66, (byte) 67, (byte) 69, (byte) 68, (byte) 67, (byte) 70, (byte) 68,
				(byte) 69, (byte) 71, (byte) 70, (byte) 69, (byte) 46, (byte) 71, (byte) 69, (byte) 45, (byte) 71,
				(byte) 46, (byte) 5, (byte) 54, (byte) 3, (byte) 53, (byte) 3, (byte) 54, (byte) 57, (byte) 54,
				(byte) 7, (byte) 5, (byte) 7, (byte) 54, (byte) 60, (byte) 57, (byte) 9, (byte) 7, (byte) 9, (byte) 57,
				(byte) 62, (byte) 60, (byte) 11, (byte) 9, (byte) 11, (byte) 60, (byte) 64, (byte) 62, (byte) 13,
				(byte) 11, (byte) 13, (byte) 62, (byte) 67, (byte) 64, (byte) 15, (byte) 13, (byte) 15, (byte) 64,
				(byte) 69, (byte) 67, (byte) 17, (byte) 15, (byte) 17, (byte) 67, (byte) 69, (byte) 17, (byte) 46,
				(byte) 19, (byte) 46, (byte) 17, (byte) 46, (byte) 19, (byte) 47, (byte) 21, (byte) 47, (byte) 19,
				(byte) 47, (byte) 21, (byte) 49, (byte) 23, (byte) 49, (byte) 21, (byte) 49, (byte) 23, (byte) 48,
				(byte) 22, (byte) 48, (byte) 23, (byte) 48, (byte) 22, (byte) 44, (byte) 20, (byte) 44, (byte) 22,
				(byte) 44, (byte) 20, (byte) 41, (byte) 18, (byte) 41, (byte) 20, (byte) 39, (byte) 41, (byte) 16,
				(byte) 18, (byte) 16, (byte) 41, (byte) 37, (byte) 39, (byte) 14, (byte) 16, (byte) 14, (byte) 39,
				(byte) 34, (byte) 37, (byte) 12, (byte) 14, (byte) 12, (byte) 37, (byte) 32, (byte) 34, (byte) 10,
				(byte) 12, (byte) 10, (byte) 34, (byte) 29, (byte) 32, (byte) 8, (byte) 10, (byte) 8, (byte) 32,
				(byte) 27, (byte) 29, (byte) 6, (byte) 8, (byte) 6, (byte) 29, (byte) 4, (byte) 24, (byte) 6,
				(byte) 27, (byte) 6, (byte) 24, (byte) 1, (byte) 50, (byte) 4, (byte) 24, (byte) 4, (byte) 50,
				(byte) 2, (byte) 52, (byte) 1, (byte) 50, (byte) 1, (byte) 52, (byte) 0, (byte) 51, (byte) 2,
				(byte) 52, (byte) 2, (byte) 51, (byte) 3, (byte) 53, (byte) 0, (byte) 51, (byte) 0, (byte) 53,
				(byte) 74, (byte) 73, (byte) 72, (byte) 75, (byte) 72, (byte) 73, (byte) 76, (byte) 75, (byte) 73,
				(byte) 77, (byte) 75, (byte) 76, (byte) 78, (byte) 77, (byte) 76, (byte) 79, (byte) 77, (byte) 78,
				(byte) 80, (byte) 77, (byte) 79, (byte) 81, (byte) 80, (byte) 79, (byte) 82, (byte) 80, (byte) 81,
				(byte) 83, (byte) 82, (byte) 81, (byte) 84, (byte) 82, (byte) 83, (byte) 85, (byte) 82, (byte) 84,
				(byte) 86, (byte) 85, (byte) 84, (byte) 87, (byte) 85, (byte) 86, (byte) 88, (byte) 87, (byte) 86,
				(byte) 89, (byte) 87, (byte) 88, (byte) 90, (byte) 89, (byte) 88, (byte) 91, (byte) 89, (byte) 90,
				(byte) 92, (byte) 89, (byte) 91, (byte) 93, (byte) 92, (byte) 91, (byte) 94, (byte) 92, (byte) 93,
				(byte) 95, (byte) 92, (byte) 94, (byte) 96, (byte) 92, (byte) 95, (byte) 97, (byte) 96, (byte) 95,
				(byte) 100, (byte) 99, (byte) 98, (byte) 101, (byte) 98, (byte) 99, (byte) 72, (byte) 98, (byte) 101,
				(byte) 102, (byte) 72, (byte) 101, (byte) 103, (byte) 102, (byte) 101, (byte) 74, (byte) 72,
				(byte) 102, (byte) 104, (byte) 102, (byte) 103, (byte) 105, (byte) 104, (byte) 103, (byte) 106,
				(byte) 104, (byte) 105, (byte) 107, (byte) 106, (byte) 105, (byte) 108, (byte) 107, (byte) 105,
				(byte) 109, (byte) 107, (byte) 108, (byte) 110, (byte) 109, (byte) 108, (byte) 111, (byte) 109,
				(byte) 110, (byte) 112, (byte) 111, (byte) 110, (byte) 113, (byte) 111, (byte) 112, (byte) 114,
				(byte) 113, (byte) 112, (byte) 115, (byte) 114, (byte) 112, (byte) 116, (byte) 114, (byte) 115,
				(byte) 117, (byte) 116, (byte) 115, (byte) 118, (byte) 116, (byte) 117, (byte) 119, (byte) 118,
				(byte) 117, (byte) 94, (byte) 119, (byte) 117, (byte) 93, (byte) 119, (byte) 94, (byte) 56, (byte) 101,
				(byte) 55, (byte) 99, (byte) 55, (byte) 101, (byte) 55, (byte) 99, (byte) 26, (byte) 100, (byte) 26,
				(byte) 99, (byte) 26, (byte) 100, (byte) 25, (byte) 98, (byte) 25, (byte) 100, (byte) 25, (byte) 98,
				(byte) 28, (byte) 72, (byte) 28, (byte) 98, (byte) 28, (byte) 72, (byte) 30, (byte) 75, (byte) 30,
				(byte) 72, (byte) 75, (byte) 77, (byte) 30, (byte) 31, (byte) 30, (byte) 77, (byte) 77, (byte) 80,
				(byte) 31, (byte) 33, (byte) 31, (byte) 80, (byte) 80, (byte) 82, (byte) 33, (byte) 35, (byte) 33,
				(byte) 82, (byte) 82, (byte) 85, (byte) 35, (byte) 36, (byte) 35, (byte) 85, (byte) 85, (byte) 87,
				(byte) 36, (byte) 38, (byte) 36, (byte) 87, (byte) 87, (byte) 89, (byte) 38, (byte) 40, (byte) 38,
				(byte) 89, (byte) 92, (byte) 42, (byte) 89, (byte) 40, (byte) 89, (byte) 42, (byte) 96, (byte) 43,
				(byte) 92, (byte) 42, (byte) 92, (byte) 43, (byte) 97, (byte) 45, (byte) 96, (byte) 43, (byte) 96,
				(byte) 45, (byte) 95, (byte) 71, (byte) 97, (byte) 45, (byte) 97, (byte) 71, (byte) 94, (byte) 70,
				(byte) 95, (byte) 71, (byte) 95, (byte) 70, (byte) 117, (byte) 68, (byte) 94, (byte) 70, (byte) 94,
				(byte) 68, (byte) 117, (byte) 115, (byte) 68, (byte) 66, (byte) 68, (byte) 115, (byte) 115, (byte) 112,
				(byte) 66, (byte) 65, (byte) 66, (byte) 112, (byte) 112, (byte) 110, (byte) 65, (byte) 63, (byte) 65,
				(byte) 110, (byte) 110, (byte) 108, (byte) 63, (byte) 61, (byte) 63, (byte) 108, (byte) 108,
				(byte) 105, (byte) 61, (byte) 59, (byte) 61, (byte) 105, (byte) 105, (byte) 103, (byte) 59, (byte) 58,
				(byte) 59, (byte) 103, (byte) 58, (byte) 103, (byte) 56, (byte) 101, (byte) 56, (byte) 103, (byte) 102,
				(byte) 120, (byte) 74, (byte) 121, (byte) 74, (byte) 120, (byte) 74, (byte) 121, (byte) 73, (byte) 122,
				(byte) 73, (byte) 121, (byte) 73, (byte) 122, (byte) 76, (byte) 123, (byte) 76, (byte) 122, (byte) 76,
				(byte) 123, (byte) 78, (byte) 124, (byte) 78, (byte) 123, (byte) 124, (byte) 125, (byte) 78, (byte) 79,
				(byte) 78, (byte) 125, (byte) 125, (byte) 126, (byte) 79, (byte) 81, (byte) 79, (byte) 126, (byte) 126,
				(byte) 127, (byte) 81, (byte) 83, (byte) 81, (byte) 127, (byte) 127, (byte) 128, (byte) 83, (byte) 84,
				(byte) 83, (byte) 128, (byte) 128, (byte) 129, (byte) 84, (byte) 86, (byte) 84, (byte) 129, (byte) 129,
				(byte) 130, (byte) 86, (byte) 88, (byte) 86, (byte) 130, (byte) 131, (byte) 90, (byte) 130, (byte) 88,
				(byte) 130, (byte) 90, (byte) 132, (byte) 91, (byte) 131, (byte) 90, (byte) 131, (byte) 91, (byte) 133,
				(byte) 93, (byte) 132, (byte) 91, (byte) 132, (byte) 93, (byte) 134, (byte) 119, (byte) 133, (byte) 93,
				(byte) 133, (byte) 119, (byte) 135, (byte) 118, (byte) 134, (byte) 119, (byte) 134, (byte) 118,
				(byte) 136, (byte) 116, (byte) 135, (byte) 118, (byte) 135, (byte) 116, (byte) 136, (byte) 137,
				(byte) 116, (byte) 114, (byte) 116, (byte) 137, (byte) 137, (byte) 138, (byte) 114, (byte) 113,
				(byte) 114, (byte) 138, (byte) 138, (byte) 139, (byte) 113, (byte) 111, (byte) 113, (byte) 139,
				(byte) 139, (byte) 140, (byte) 111, (byte) 109, (byte) 111, (byte) 140, (byte) 140, (byte) 141,
				(byte) 109, (byte) 107, (byte) 109, (byte) 141, (byte) 141, (byte) 142, (byte) 107, (byte) 106,
				(byte) 107, (byte) 142, (byte) 106, (byte) 142, (byte) 104, (byte) 143, (byte) 104, (byte) 142,
				(byte) 104, (byte) 143, (byte) 102, (byte) 120, (byte) 102, (byte) 143 };
		size[4] = valueFace.length;

		mIndexBuffer[4] = ByteBuffer.allocateDirect(valueFace.length);
		mIndexBuffer[4].put(valueFace);
		mIndexBuffer[4].position(0);
	}

	public void setFace5() {
		byte valueFace[] = { (byte) 0, (byte) 1, (byte) 2, (byte) 1, (byte) 0, (byte) 3, (byte) 1, (byte) 3, (byte) 4,
				(byte) 1, (byte) 4, (byte) 5, (byte) 1, (byte) 5, (byte) 6, (byte) 1, (byte) 6, (byte) 7, (byte) 1,
				(byte) 7, (byte) 8, (byte) 1, (byte) 8, (byte) 9, (byte) 1, (byte) 9, (byte) 10, (byte) 10, (byte) 9,
				(byte) 11, (byte) 10, (byte) 11, (byte) 12, (byte) 12, (byte) 11, (byte) 13, (byte) 13, (byte) 11,
				(byte) 14, (byte) 13, (byte) 14, (byte) 15, (byte) 15, (byte) 14, (byte) 16, (byte) 16, (byte) 14,
				(byte) 17, (byte) 18, (byte) 19, (byte) 20, (byte) 19, (byte) 18, (byte) 21, (byte) 21, (byte) 18,
				(byte) 22, (byte) 22, (byte) 18, (byte) 23, (byte) 23, (byte) 18, (byte) 24, (byte) 24, (byte) 18,
				(byte) 25, (byte) 24, (byte) 25, (byte) 26, (byte) 26, (byte) 25, (byte) 27, (byte) 27, (byte) 25,
				(byte) 28, (byte) 27, (byte) 28, (byte) 29, (byte) 29, (byte) 28, (byte) 30, (byte) 29, (byte) 30,
				(byte) 31, (byte) 29, (byte) 31, (byte) 32, (byte) 29, (byte) 32, (byte) 33, (byte) 29, (byte) 33,
				(byte) 34, (byte) 29, (byte) 34, (byte) 35, (byte) 36, (byte) 37, (byte) 38, (byte) 37, (byte) 36,
				(byte) 39, (byte) 39, (byte) 36, (byte) 40, (byte) 40, (byte) 36, (byte) 41, (byte) 41, (byte) 36,
				(byte) 42, (byte) 42, (byte) 36, (byte) 43, (byte) 43, (byte) 36, (byte) 44, (byte) 44, (byte) 36,
				(byte) 45, (byte) 45, (byte) 36, (byte) 46, (byte) 45, (byte) 46, (byte) 47, (byte) 47, (byte) 46,
				(byte) 48, (byte) 47, (byte) 48, (byte) 49, (byte) 47, (byte) 49, (byte) 50, (byte) 50, (byte) 49,
				(byte) 51, (byte) 50, (byte) 51, (byte) 52, (byte) 50, (byte) 52, (byte) 17, (byte) 50, (byte) 17,
				(byte) 14, (byte) 50, (byte) 14, (byte) 53, (byte) 50, (byte) 53, (byte) 54, (byte) 54, (byte) 53,
				(byte) 55, (byte) 54, (byte) 55, (byte) 56, (byte) 56, (byte) 55, (byte) 57, (byte) 56, (byte) 57,
				(byte) 58, (byte) 58, (byte) 57, (byte) 59, (byte) 58, (byte) 59, (byte) 60, (byte) 60, (byte) 59,
				(byte) 61, (byte) 60, (byte) 61, (byte) 62, (byte) 62, (byte) 61, (byte) 63, (byte) 62, (byte) 63,
				(byte) 64, (byte) 64, (byte) 63, (byte) 65, (byte) 64, (byte) 65, (byte) 66, (byte) 66, (byte) 65,
				(byte) 67, (byte) 66, (byte) 67, (byte) 68, (byte) 68, (byte) 67, (byte) 69, (byte) 68, (byte) 69,
				(byte) 70, (byte) 70, (byte) 69, (byte) 71, (byte) 70, (byte) 71, (byte) 72, (byte) 72, (byte) 71,
				(byte) 73, (byte) 73, (byte) 71, (byte) 74, (byte) 73, (byte) 74, (byte) 75, (byte) 75, (byte) 74,
				(byte) 76, (byte) 75, (byte) 76, (byte) 77, (byte) 77, (byte) 76, (byte) 78, (byte) 77, (byte) 78,
				(byte) 79, (byte) 79, (byte) 78, (byte) 80, (byte) 79, (byte) 80, (byte) 81, (byte) 81, (byte) 80,
				(byte) 82, (byte) 81, (byte) 82, (byte) 83, (byte) 83, (byte) 82, (byte) 84, (byte) 83, (byte) 84,
				(byte) 85, (byte) 85, (byte) 84, (byte) 86, (byte) 85, (byte) 86, (byte) 87, (byte) 87, (byte) 86,
				(byte) 20, (byte) 87, (byte) 20, (byte) 19, (byte) 87, (byte) 19, (byte) 88, (byte) 88, (byte) 19,
				(byte) 89, (byte) 88, (byte) 89, (byte) 90, (byte) 88, (byte) 90, (byte) 91, (byte) 88, (byte) 91,
				(byte) 92, (byte) 88, (byte) 92, (byte) 93, (byte) 93, (byte) 92, (byte) 94, (byte) 93, (byte) 94,
				(byte) 95, (byte) 93, (byte) 95, (byte) 96, (byte) 96, (byte) 95, (byte) 97, (byte) 96, (byte) 97,
				(byte) 98, (byte) 98, (byte) 97, (byte) 99, (byte) 99, (byte) 97, (byte) 100, (byte) 100, (byte) 97,
				(byte) 101, (byte) 101, (byte) 97, (byte) 102, (byte) 102, (byte) 97, (byte) 103 };
		size[5] = valueFace.length;

		mIndexBuffer[5] = ByteBuffer.allocateDirect(valueFace.length);
		mIndexBuffer[5].put(valueFace);
		mIndexBuffer[5].position(0);
	}

	public void setFace6() {
		byte valueFace[] = { (byte) 4, (byte) 3, (byte) 52, (byte) 3, (byte) 53, (byte) 52, (byte) 5, (byte) 4,
				(byte) 54, (byte) 4, (byte) 52, (byte) 54, (byte) 3, (byte) 0, (byte) 53, (byte) 0, (byte) 55,
				(byte) 53, (byte) 2, (byte) 55, (byte) 0, (byte) 2, (byte) 56, (byte) 55, (byte) 10, (byte) 57,
				(byte) 1, (byte) 10, (byte) 58, (byte) 57, (byte) 12, (byte) 58, (byte) 10, (byte) 59, (byte) 58,
				(byte) 12, (byte) 13, (byte) 59, (byte) 12, (byte) 60, (byte) 59, (byte) 13, (byte) 15, (byte) 60,
				(byte) 13, (byte) 61, (byte) 60, (byte) 15, (byte) 16, (byte) 61, (byte) 15, (byte) 62, (byte) 61,
				(byte) 16, (byte) 17, (byte) 62, (byte) 16, (byte) 63, (byte) 62, (byte) 17, (byte) 34, (byte) 63,
				(byte) 17, (byte) 64, (byte) 63, (byte) 34, (byte) 33, (byte) 64, (byte) 34, (byte) 65, (byte) 64,
				(byte) 33, (byte) 31, (byte) 65, (byte) 33, (byte) 66, (byte) 65, (byte) 31, (byte) 30, (byte) 66,
				(byte) 31, (byte) 67, (byte) 66, (byte) 30, (byte) 67, (byte) 30, (byte) 28, (byte) 68, (byte) 67,
				(byte) 28, (byte) 68, (byte) 28, (byte) 18, (byte) 69, (byte) 68, (byte) 18, (byte) 18, (byte) 70,
				(byte) 69, (byte) 20, (byte) 70, (byte) 18, (byte) 70, (byte) 20, (byte) 19, (byte) 71, (byte) 70,
				(byte) 19, (byte) 21, (byte) 71, (byte) 19, (byte) 21, (byte) 72, (byte) 71, (byte) 22, (byte) 72,
				(byte) 21, (byte) 22, (byte) 73, (byte) 72, (byte) 23, (byte) 73, (byte) 22, (byte) 23, (byte) 74,
				(byte) 73, (byte) 24, (byte) 74, (byte) 23, (byte) 24, (byte) 75, (byte) 74, (byte) 25, (byte) 75,
				(byte) 24, (byte) 25, (byte) 76, (byte) 75, (byte) 25, (byte) 77, (byte) 76, (byte) 26, (byte) 77,
				(byte) 25, (byte) 78, (byte) 77, (byte) 26, (byte) 27, (byte) 78, (byte) 26, (byte) 79, (byte) 78,
				(byte) 27, (byte) 29, (byte) 79, (byte) 27, (byte) 80, (byte) 79, (byte) 29, (byte) 32, (byte) 80,
				(byte) 29, (byte) 81, (byte) 80, (byte) 32, (byte) 36, (byte) 81, (byte) 32, (byte) 82, (byte) 81,
				(byte) 36, (byte) 38, (byte) 82, (byte) 36, (byte) 82, (byte) 40, (byte) 83, (byte) 40, (byte) 82,
				(byte) 38, (byte) 40, (byte) 84, (byte) 83, (byte) 42, (byte) 84, (byte) 40, (byte) 85, (byte) 84,
				(byte) 42, (byte) 44, (byte) 85, (byte) 42, (byte) 86, (byte) 85, (byte) 44, (byte) 46, (byte) 86,
				(byte) 44, (byte) 87, (byte) 86, (byte) 46, (byte) 48, (byte) 87, (byte) 46, (byte) 51, (byte) 89,
				(byte) 88, (byte) 49, (byte) 89, (byte) 51, (byte) 49, (byte) 90, (byte) 89, (byte) 47, (byte) 90,
				(byte) 49, (byte) 47, (byte) 91, (byte) 90, (byte) 45, (byte) 91, (byte) 47, (byte) 45, (byte) 92,
				(byte) 91, (byte) 43, (byte) 92, (byte) 45, (byte) 43, (byte) 93, (byte) 92, (byte) 41, (byte) 93,
				(byte) 43, (byte) 41, (byte) 94, (byte) 93, (byte) 39, (byte) 94, (byte) 41, (byte) 39, (byte) 95,
				(byte) 94, (byte) 37, (byte) 95, (byte) 39, (byte) 37, (byte) 96, (byte) 95, (byte) 37, (byte) 35,
				(byte) 96, (byte) 35, (byte) 97, (byte) 96, (byte) 35, (byte) 14, (byte) 97, (byte) 14, (byte) 98,
				(byte) 97, (byte) 14, (byte) 11, (byte) 98, (byte) 11, (byte) 99, (byte) 98, (byte) 11, (byte) 9,
				(byte) 99, (byte) 9, (byte) 100, (byte) 99, (byte) 9, (byte) 8, (byte) 100, (byte) 8, (byte) 101,
				(byte) 100, (byte) 8, (byte) 7, (byte) 101, (byte) 7, (byte) 6, (byte) 101, (byte) 6, (byte) 102,
				(byte) 101, (byte) 6, (byte) 5, (byte) 102, (byte) 5, (byte) 54, (byte) 102, (byte) 103, (byte) 87,
				(byte) 48, (byte) 50, (byte) 103, (byte) 48, (byte) 104, (byte) 103, (byte) 50, (byte) 88, (byte) 156,
				(byte) 157, (byte) 156, (byte) 88, (byte) 89, (byte) 89, (byte) 155, (byte) 156, (byte) 155, (byte) 89,
				(byte) 90, (byte) 90, (byte) 154, (byte) 155, (byte) 154, (byte) 90, (byte) 91, (byte) 91, (byte) 153,
				(byte) 154, (byte) 153, (byte) 91, (byte) 92, (byte) 92, (byte) 152, (byte) 153, (byte) 152, (byte) 92,
				(byte) 93, (byte) 93, (byte) 151, (byte) 152, (byte) 151, (byte) 93, (byte) 94, (byte) 94, (byte) 150,
				(byte) 151, (byte) 150, (byte) 94, (byte) 95, (byte) 95, (byte) 149, (byte) 150, (byte) 149, (byte) 95,
				(byte) 96, (byte) 96, (byte) 148, (byte) 149, (byte) 148, (byte) 96, (byte) 97, (byte) 97, (byte) 147,
				(byte) 148, (byte) 147, (byte) 97, (byte) 98, (byte) 98, (byte) 146, (byte) 147, (byte) 146, (byte) 98,
				(byte) 99, (byte) 99, (byte) 145, (byte) 146, (byte) 145, (byte) 99, (byte) 100, (byte) 100,
				(byte) 144, (byte) 145, (byte) 144, (byte) 100, (byte) 101, (byte) 102, (byte) 144, (byte) 101,
				(byte) 144, (byte) 102, (byte) 143, (byte) 54, (byte) 143, (byte) 102, (byte) 143, (byte) 54,
				(byte) 142, (byte) 52, (byte) 142, (byte) 54, (byte) 142, (byte) 52, (byte) 121, (byte) 53, (byte) 121,
				(byte) 52, (byte) 121, (byte) 53, (byte) 120, (byte) 55, (byte) 120, (byte) 53, (byte) 120, (byte) 55,
				(byte) 118, (byte) 56, (byte) 118, (byte) 55, (byte) 118, (byte) 56, (byte) 119, (byte) 56, (byte) 117,
				(byte) 119, (byte) 117, (byte) 56, (byte) 57, (byte) 58, (byte) 117, (byte) 57, (byte) 117, (byte) 58,
				(byte) 122, (byte) 59, (byte) 122, (byte) 58, (byte) 122, (byte) 59, (byte) 123, (byte) 60, (byte) 123,
				(byte) 59, (byte) 123, (byte) 60, (byte) 124, (byte) 61, (byte) 124, (byte) 60, (byte) 124, (byte) 61,
				(byte) 125, (byte) 62, (byte) 125, (byte) 61, (byte) 125, (byte) 62, (byte) 126, (byte) 63, (byte) 126,
				(byte) 62, (byte) 126, (byte) 63, (byte) 116, (byte) 64, (byte) 116, (byte) 63, (byte) 116, (byte) 64,
				(byte) 115, (byte) 65, (byte) 115, (byte) 64, (byte) 115, (byte) 65, (byte) 114, (byte) 66, (byte) 114,
				(byte) 65, (byte) 114, (byte) 66, (byte) 113, (byte) 67, (byte) 113, (byte) 66, (byte) 113, (byte) 67,
				(byte) 112, (byte) 68, (byte) 112, (byte) 67, (byte) 112, (byte) 68, (byte) 111, (byte) 69, (byte) 111,
				(byte) 68, (byte) 111, (byte) 69, (byte) 106, (byte) 69, (byte) 107, (byte) 106, (byte) 107, (byte) 69,
				(byte) 70, (byte) 71, (byte) 107, (byte) 70, (byte) 107, (byte) 71, (byte) 105, (byte) 72, (byte) 105,
				(byte) 71, (byte) 105, (byte) 72, (byte) 108, (byte) 73, (byte) 108, (byte) 72, (byte) 108, (byte) 73,
				(byte) 109, (byte) 74, (byte) 109, (byte) 73, (byte) 109, (byte) 74, (byte) 110, (byte) 75, (byte) 110,
				(byte) 74, (byte) 110, (byte) 75, (byte) 127, (byte) 76, (byte) 127, (byte) 75, (byte) 127, (byte) 76,
				(byte) 128, (byte) 76, (byte) 129, (byte) 128, (byte) 129, (byte) 76, (byte) 77, (byte) 77, (byte) 130,
				(byte) 129, (byte) 130, (byte) 77, (byte) 78, (byte) 78, (byte) 131, (byte) 130, (byte) 131, (byte) 78,
				(byte) 79, (byte) 79, (byte) 132, (byte) 131, (byte) 132, (byte) 79, (byte) 80, (byte) 80, (byte) 133,
				(byte) 132, (byte) 133, (byte) 80, (byte) 81, (byte) 81, (byte) 134, (byte) 133, (byte) 134, (byte) 81,
				(byte) 82, (byte) 134, (byte) 83, (byte) 135, (byte) 83, (byte) 134, (byte) 82, (byte) 83, (byte) 136,
				(byte) 135, (byte) 136, (byte) 83, (byte) 84, (byte) 84, (byte) 137, (byte) 136, (byte) 137, (byte) 84,
				(byte) 85, (byte) 85, (byte) 138, (byte) 137, (byte) 138, (byte) 85, (byte) 86, (byte) 86, (byte) 139,
				(byte) 138, (byte) 139, (byte) 86, (byte) 87, (byte) 87, (byte) 140, (byte) 139, (byte) 140, (byte) 87,
				(byte) 103, (byte) 103, (byte) 141, (byte) 140, (byte) 141, (byte) 103, (byte) 104, (byte) 1,
				(byte) 56, (byte) 2, (byte) 1, (byte) 57, (byte) 56 };
		size[6] = valueFace.length;

		mIndexBuffer[6] = ByteBuffer.allocateDirect(valueFace.length);
		mIndexBuffer[6].put(valueFace);
		mIndexBuffer[6].position(0);
	}

	public void setNormal0() {
		float valueNormal[] = { 0.959927f, -2.37085f, 1.56188f, 2.95173f, -0.064741f, 0.496495f, 0.667319f, -2.45691f,
				1.58118f, 2.9258f, 0.333528f, 0.539239f, 2.85157f, 0.723998f, 0.552587f, 2.73113f, 1.1007f, 0.537466f,
				2.56628f, 1.45823f, 0.495801f, 1.24718f, -2.25651f, 1.52782f, 2.35917f, 1.7906f, 0.430188f, 2.86626f,
				2.7541f, 0.397538f, 1.52687f, -2.11182f, 1.47973f, 1.63117f, 0.613814f, 0.350498f, 2.46457f, -2.52684f,
				1.86785f, 2.12907f, -1.64811f, 1.31103f, 2.34967f, -1.39161f, 1.22863f, 2.53895f, -1.10274f, 1.14208f,
				2.69027f, -0.785184f, 1.05487f, 2.79781f, -0.444586f, 0.970583f, 0.053089f, 0.853551f, 0.518297f,
				-0.056747f, -0.941465f, 0.332298f, -0.055417f, 2.55211f, 1.56859f, -0.286073f, -2.80898f, 1.00129f,
				-0.37685f, 2.51957f, 1.57652f, -0.694762f, 2.45758f, 1.56574f, -0.628022f, -2.75038f, 1.00836f,
				-1.00887f, 2.36584f, 1.53509f, -0.962852f, -2.65458f, 1.00115f, -1.31881f, 2.24323f, 1.48221f, -1.288f,
				-2.52196f, 0.978174f, -1.62322f, 2.08792f, 1.40363f, -1.60023f, -2.35282f, 0.937441f, -1.80477f,
				1.94975f, 1.38713f, -2.4961f, -2.86413f, 1.23995f, -0.416857f, 2.11485f, 1.82042f, -0.538285f,
				-1.53792f, 0.881691f, 0.445437f, 2.19989f, 1.98638f, 0.370605f, -2.51629f, 1.58499f, 0.703479f,
				2.14951f, 1.96647f, 0.96203f, 2.07964f, 1.93134f, 2.92717f, -0.464495f, 0.424345f, 2.85016f,
				-0.857981f, 0.324165f, 2.71953f, -1.23677f, 0.198634f, 2.53593f, -1.59107f, 0.052256f, 1.22127f,
				1.98755f, 1.88057f, 2.30252f, -1.91107f, -0.108994f, 2.10077f, -2.11478f, -0.29865f, 1.47994f,
				1.86993f, 1.81361f, 2.53216f, -0.482677f, 0.533902f, 1.1158f, 1.17356f, 1.16943f, 1.89877f, 1.60479f,
				1.67323f, 2.13837f, 1.40223f, 1.56176f, 2.35894f, 1.16342f, 1.43426f, 2.55151f, 0.888807f, 1.29316f,
				2.7068f, 0.581606f, 1.14218f, 5.68575f, 2.51407f, 0.776933f, 5.72896f, -1.00449f, 1.0002f, 5.53081f,
				-1.69203f, 1.08692f, 5.24812f, -2.34377f, 1.17517f, 4.88838f, -2.94945f, 1.26141f, 4.46019f, -3.50135f,
				1.34224f, 4.07257f, -4.07207f, 0.931081f, 3.43278f, -4.44547f, 1.45031f, 2.84833f, -4.80517f, 1.50453f,
				2.23151f, -5.09451f, 1.54538f, 1.59024f, -5.31278f, 1.57174f, 0.931388f, -5.45977f, 1.58276f,
				-2.37454f, -5.51776f, 1.69396f, -3.44298f, -4.72238f, 0.921825f, -3.2494f, -3.68027f, 0.586947f,
				-2.81125f, -5.10542f, 0.969953f, -2.14139f, -5.40967f, 0.99895f, -1.44245f, -5.63187f, 1.01087f,
				-0.723426f, -5.76945f, 1.00732f, -0.179926f, -2.88033f, 0.66572f, -0.133434f, 3.69866f, 1.04311f,
				-0.730461f, 5.49312f, 1.57457f, -1.43746f, 5.3555f, 1.56806f, -2.12584f, 5.13816f, 1.54156f, -2.7887f,
				4.84264f, 1.49334f, -3.41846f, 4.47082f, 1.42053f, -3.16127f, 3.44857f, 1.34445f, 0.977252f, 5.1421f,
				1.99126f, -2.30743f, 5.40765f, 1.58893f, 1.58512f, 5.00112f, 1.97704f, 2.17875f, 4.80027f, 1.94735f,
				2.75367f, 4.53925f, 1.90185f, 3.30443f, 4.21775f, 1.84007f, 3.67864f, 3.73418f, 2.32837f, 4.31847f,
				3.42612f, 1.62482f, 4.76008f, 2.91927f, 1.50757f, 5.14244f, 2.35418f, 1.37607f, 5.45411f, 1.73746f,
				1.23352f, 5.6852f, 1.07762f, 1.08376f, 5.68046f, -2.50009f, 0.105322f, 3.63142f, -3.42375f, -0.183823f,
				4.73633f, -3.66299f, -0.037075f, 5.17358f, -3.00987f, 0.117441f, 5.51595f, -2.30159f, 0.253917f,
				5.75902f, -1.55372f, 0.367428f, 5.90112f, -0.781228f, 0.454618f, 5.94263f, 0.002237f, 0.513723f,
				5.88489f, 0.783282f, 0.544081f, 5.73005f, 1.55f, 0.546177f, 5.4807f, 2.29046f, 0.521221f, 5.14004f,
				2.99328f, 0.471265f, 4.71259f, 3.64612f, 0.398925f, 3.6606f, 3.38187f, 0.233969f, -0.065418f,
				0.997857f, 0f, -0.326007f, 2.97649f, 0f, -0.711863f, 2.90844f, 0f, -1.08549f, 2.7906f, 0f, -1.44068f,
				2.62491f, 0f, -1.77115f, 2.41429f, 0f, -2.73376f, 2.91709f, 0f, -0.581794f, 1.69898f, 0f, 0.494333f,
				2.95414f, 0f, 0.844159f, 2.87379f, 0f, 1.18193f, 2.75215f, 0f, 1.5027f, 2.59098f, 0f, 1.80187f,
				2.3926f, 0f, 2.82334f, 2.82334f, 0f, 2.3926f, 1.80187f, 0f, 2.591f, 1.50265f, 0f, 2.75216f, 1.18191f,
				0f, 2.99358f, 0.065361f, 0f, 2.97652f, -0.325773f, 0f, 2.90857f, -0.711383f, 0f, 2.79092f, -1.08468f,
				0f, 2.62551f, -1.43962f, 0f, 2.4152f, -1.76991f, 0f, 2.901f, -2.74954f, 0f, 1.69059f, -0.590143f, 0f,
				2.87377f, 0.844242f, 0f, 2.95414f, 0.494272f, 0f, 2.95945f, 0.45543f, 0f, 2.87476f, 0.837595f, 0f,
				2.74086f, 1.2056f, 0f, 2.56013f, 1.55291f, 0f, 2.33561f, 1.87368f, 0f, 2.16666f, 2.07293f, 0f, 2.695f,
				0.485206f, 0f, 2.71221f, -1.2704f, 0f, 2.84721f, -0.92917f, 0f, 2.93949f, -0.573916f, 0f, -0.126806f,
				-1.99598f, 0f, -0.441856f, -2.96185f, 0f, -0.813123f, -2.88213f, 0f, -1.17141f, -2.75601f, 0f,
				-1.51088f, -2.58555f, 0f, -1.82593f, -2.37357f, 0f, -2.02266f, -2.21377f, 0f, -0.468306f, -2.71149f,
				0f, 0.574031f, -2.93946f, 0f, 0.929187f, -2.84721f, 0f, 1.27033f, -2.71224f, 0f, 1.59257f, -2.53647f,
				0f, 1.89077f, -2.32271f, 0f, 1.41152f, -1.41159f, 0f, 2.32268f, -1.8908f, 0f, 2.53651f, -1.59251f, 0f };

		ByteBuffer nbb = ByteBuffer.allocateDirect(valueNormal.length * 4);
		nbb.order(ByteOrder.nativeOrder());
		mNormalBuffer[0] = nbb.asFloatBuffer();
		mNormalBuffer[0].put(valueNormal);
		mNormalBuffer[0].position(0);
	}

	public void setNormal1() {
		float valueNormal[] = { -2.84017f, -0.892832f, 0f, -2.90606f, 0.646941f, 0f, -2.97447f, -0.127305f, 0f,
				-2.5123f, -1.59751f, 0f, -2.63963f, 1.37699f, 0f, -1.40359f, -1.40063f, 0f, -2.80116f, 2.80726f, 0f,
				-1.6029f, -2.50889f, 0f, -1.37117f, 2.64265f, 0f, -0.899074f, -2.83819f, 0f, -0.640601f, 2.90747f, 0f,
				-0.133744f, -2.97419f, 0f, 0.133743f, 2.97419f, 0f, 0.640602f, -2.90747f, 0f, 0.898932f, 2.83825f, 0f,
				1.37122f, -2.64261f, 0f, 1.60293f, 2.50884f, 0f, 2.80121f, -2.80725f, 0f, 1.40364f, 1.40059f, 0f,
				2.63961f, -1.37703f, 0f, 2.5123f, 1.59751f, 0f, 2.90608f, -0.646757f, 0f, 2.84018f, 0.892761f, 0f,
				2.9745f, 0.127256f, 0f, -2.5089f, 1.60287f, 4f, -2.90605f, 0.646882f, 3f, -2.97447f, -0.127413f, 0f,
				-1.40058f, 1.40363f, 3f, -2.63958f, 1.37711f, 3f, -1.59738f, 2.51239f, 4f, -2.80116f, 2.80728f, 2f,
				-1.37128f, 2.6426f, 3f, -0.892784f, 2.84019f, 3f, -0.640509f, 2.90747f, 3f, -0.127337f, 2.97447f, 4f,
				0.133727f, 2.97421f, 2f, 0.898895f, 2.83825f, 3f, 0.646878f, 2.90608f, 3f, 1.6029f, 2.50887f, 3f,
				1.37696f, 2.63963f, 3f, 1.40366f, 1.40055f, 3f, 2.80728f, 2.80119f, 4f, 2.51238f, 1.59741f, 2f,
				2.84015f, 0.892918f, 3f, 2.64259f, 1.37128f, 5f, 2.97445f, 0.127352f, 3f, 2.50884f, -1.60295f, 4f,
				2.83822f, -0.898934f, 3f, 2.90748f, 0.640468f, 2f, 2.97422f, -0.133662f, 1f, -2.83821f, 0.899025f, 3f,
				-2.90746f, -0.640609f, 2f, -2.97418f, 0.133775f, 0.999999f, -2.64259f, -1.37128f, 3f, -2.80718f,
				-2.80127f, 4f, -2.84019f, -0.892799f, 1f, -2.51238f, -1.59739f, 3f, -1.37705f, -2.63961f, 4f,
				-1.40359f, -1.40061f, 2f, -1.60286f, -2.50893f, 3f, -0.64695f, -2.90605f, 3f, -0.89907f, -2.83818f, 3f,
				0.127338f, -2.97447f, 3f, -0.133726f, -2.97421f, 3f, 0.892784f, -2.84019f, 4f, 0.640507f, -2.90747f,
				2f, 1.37133f, -2.64257f, 3f, 1.59748f, -2.51232f, 3f, 2.80123f, -2.80723f, 3f, 1.4006f, -1.40363f, 4f,
				2.63961f, -1.37702f, 2f, 2.90605f, -0.647007f, 3f, -2.50885f, 1.60296f, 3f, -2.90605f, 0.646985f, 3f,
				-2.97447f, -0.127244f, 0f, -1.40058f, 1.40364f, 3f, -2.63965f, 1.37697f, 3f, -1.59745f, 2.51236f, 4f,
				-2.80125f, 2.80717f, 2f, -1.37136f, 2.64256f, 3f, -0.892815f, 2.84016f, 3f, -0.640626f, 2.90744f, 3f,
				-0.127237f, 2.97449f, 4f, 0.133805f, 2.97418f, 2f, 0.899121f, 2.83817f, 3f, 0.646793f, 2.90609f, 3f,
				1.60303f, 2.50879f, 3f, 1.37695f, 2.63964f, 3f, 1.40366f, 1.40056f, 3f, 2.80733f, 2.8011f, 4f, 2.5123f,
				1.59756f, 2f, 2.84009f, 0.893014f, 3f, 2.64262f, 1.37127f, 5f, 2.97447f, 0.127263f, 3f, 2.50885f,
				-1.60293f, 4f, 2.83821f, -0.899058f, 3f, 2.90744f, 0.640712f, 2f, 2.97417f, -0.133801f, 1f, -2.83818f,
				0.899071f, 3f, -2.90747f, -0.640633f, 2f, -2.9742f, 0.133639f, 1f, -2.64265f, -1.37118f, 4f, -2.84022f,
				-0.892702f, 2f, -2.80718f, -2.80123f, 3f, -2.51236f, -1.59741f, 3f, -1.37706f, -2.63962f, 4f,
				-1.40366f, -1.40056f, 2f, -1.60288f, -2.50886f, 3f, -0.64688f, -2.90605f, 3f, -0.898808f, -2.8383f, 3f,
				0.127236f, -2.97449f, 3f, -0.133807f, -2.97419f, 3f, 0.892815f, -2.84016f, 4f, 0.640513f, -2.90749f,
				2f, 1.37115f, -2.64265f, 3f, 1.59755f, -2.51228f, 3f, 2.80125f, -2.80717f, 3f, 1.40062f, -1.40361f, 4f,
				2.63965f, -1.37697f, 2f, 2.90605f, -0.646952f, 3f, -2.90749f, -0.640515f, 0f, -2.97418f, 0.13384f, 0f,
				-2.83821f, 0.899046f, 0f, -2.50893f, 1.60283f, 0f, -1.40063f, 1.40358f, 0f, -1.59752f, 2.51231f, 0f,
				-0.892921f, 2.84013f, 0f, -0.127263f, 2.97447f, 0f, 0.646997f, 2.90604f, 0f, 1.37714f, 2.63955f, 0f,
				2.80733f, 2.80113f, 0f, 2.64252f, 1.37146f, 0f, 2.90742f, 0.640673f, 0f, 2.97418f, -0.133805f, 0f,
				2.83821f, -0.89903f, 0f, 2.50893f, -1.60283f, 0f, 1.40063f, -1.40358f, 0f, 1.59741f, -2.51236f, 0f,
				0.892702f, -2.84022f, 0f, 0.127258f, -2.97447f, 0f, -0.64684f, -2.9061f, 0f, -1.37683f, -2.63968f, 0f,
				-2.80733f, -2.80113f, 0f, -2.64265f, -1.37115f, 0f };

		ByteBuffer nbb = ByteBuffer.allocateDirect(valueNormal.length * 4);
		nbb.order(ByteOrder.nativeOrder());
		mNormalBuffer[1] = nbb.asFloatBuffer();
		mNormalBuffer[1].put(valueNormal);
		mNormalBuffer[1].position(0);
	}

	public void setNormal2() {
		float valueNormal[] = { -2.84019f, -0.892784f, 0f, -2.90605f, 0.646949f, 0f, -2.97447f, -0.127337f, 0f,
				-2.51225f, -1.59756f, 0f, -2.63961f, 1.37705f, 0f, -1.40361f, -1.40063f, 0f, -2.80127f, 2.80718f, 0f,
				-1.60293f, -2.50884f, 0f, -1.37122f, 2.64261f, 0f, -0.898933f, -2.83825f, 0f, -0.640603f, 2.90747f, 0f,
				-0.133824f, -2.9742f, 0f, 0.133744f, 2.97419f, 0f, 0.64051f, -2.90746f, 0f, 0.899073f, 2.83819f, 0f,
				1.37131f, -2.6426f, 0f, 1.6029f, 2.50889f, 0f, 2.80116f, -2.80726f, 0f, 1.40359f, 1.40063f, 0f,
				2.63961f, -1.37705f, 0f, 2.51231f, 1.59748f, 0f, 2.90607f, -0.646787f, 0f, 2.8402f, 0.892703f, 0f,
				2.9745f, 0.127256f, 0f, -2.50889f, 1.6029f, 4f, -2.90605f, 0.646879f, 3f, -2.97447f, -0.127439f, 0f,
				-1.40063f, 1.40359f, 3f, -2.63962f, 1.37706f, 3f, -1.59748f, 2.51231f, 4f, -2.80123f, 2.80718f, 2f,
				-1.37111f, 2.64267f, 3f, -0.892785f, 2.84019f, 3f, -0.640619f, 2.90748f, 3f, -0.127338f, 2.97447f, 4f,
				0.133826f, 2.97417f, 2f, 0.898997f, 2.83824f, 3f, 0.64695f, 2.90605f, 3f, 1.60287f, 2.50889f, 3f,
				1.37705f, 2.63961f, 3f, 1.40364f, 1.40058f, 3f, 2.80718f, 2.80127f, 4f, 2.51236f, 1.59745f, 2f,
				2.84015f, 0.892914f, 3f, 2.64261f, 1.37122f, 5f, 2.97445f, 0.127339f, 3f, 2.50889f, -1.6029f, 4f,
				2.8382f, -0.898992f, 3f, 2.90749f, 0.640439f, 2f, 2.97422f, -0.133662f, 1f, -2.83819f, 0.899073f, 3f,
				-2.90747f, -0.640601f, 2f, -2.97419f, 0.133743f, 1f, -2.64258f, -1.37126f, 3f, -2.80722f, -2.80127f,
				4f, -2.84022f, -0.892739f, 1f, -2.51232f, -1.59746f, 3f, -1.37696f, -2.63963f, 4f, -1.40361f,
				-1.40062f, 2f, -1.6029f, -2.50887f, 3f, -0.646879f, -2.90608f, 3f, -0.898997f, -2.83824f, 3f,
				0.127175f, -2.97449f, 3f, -0.133828f, -2.97417f, 3f, 0.892845f, -2.84014f, 4f, 0.640623f, -2.90748f,
				2f, 1.37116f, -2.64264f, 3f, 1.59745f, -2.51237f, 3f, 2.80123f, -2.80723f, 3f, 1.40058f, -1.40363f, 4f,
				2.63964f, -1.37695f, 2f, 2.90606f, -0.646995f, 3f, -2.50893f, 1.60286f, 3f, -2.90605f, 0.646951f, 3f,
				-2.97447f, -0.127263f, 0f, -1.40062f, 1.40359f, 3f, -2.6396f, 1.37703f, 3f, -1.59736f, 2.51239f, 4f,
				-2.80132f, 2.80717f, 2f, -1.37123f, 2.64259f, 3f, -0.892738f, 2.84022f, 3f, -0.640516f, 2.90749f, 3f,
				-0.127336f, 2.97445f, 4f, 0.133838f, 2.97418f, 2f, 0.899046f, 2.83821f, 3f, 0.646993f, 2.90606f, 3f,
				1.60283f, 2.50893f, 3f, 1.37694f, 2.63965f, 3f, 1.40358f, 1.40063f, 3f, 2.80727f, 2.80116f, 4f,
				2.51231f, 1.59752f, 2f, 2.84013f, 0.892921f, 3f, 2.6426f, 1.37128f, 5f, 2.97447f, 0.127258f, 3f,
				2.50886f, -1.6029f, 4f, 2.83824f, -0.898995f, 3f, 2.90744f, 0.64071f, 2f, 2.97417f, -0.133828f, 1f,
				-2.83818f, 0.89907f, 3f, -2.90748f, -0.640621f, 2f, -2.97419f, 0.133625f, 1f, -2.64264f, -1.37116f, 4f,
				-2.84022f, -0.892701f, 2f, -2.80723f, -2.80123f, 3f, -2.51236f, -1.5974f, 3f, -1.37695f, -2.63964f, 4f,
				-1.40358f, -1.40063f, 2f, -1.60282f, -2.50893f, 3f, -0.646996f, -2.90606f, 3f, -0.899029f, -2.83821f,
				3f, 0.127339f, -2.97445f, 3f, -0.133806f, -2.97419f, 3f, 0.89274f, -2.84022f, 4f, 0.640624f, -2.90744f,
				2f, 1.37137f, -2.64256f, 3f, 1.59746f, -2.51232f, 3f, 2.80116f, -2.80729f, 3f, 1.40061f, -1.40362f, 4f,
				2.6396f, -1.37703f, 2f, 2.90605f, -0.646951f, 3f, -2.90749f, -0.640516f, 0f, -2.97418f, 0.133805f, 0f,
				-2.83821f, 0.899029f, 0f, -2.50884f, 1.60295f, 0f, -1.40066f, 1.40358f, 0f, -1.59757f, 2.51224f, 0f,
				-0.892701f, 2.84022f, 0f, -0.127246f, 2.97447f, 0f, 0.646985f, 2.90605f, 0f, 1.37697f, 2.63965f, 0f,
				2.80717f, 2.80125f, 0f, 2.64256f, 1.37137f, 0f, 2.90744f, 0.640623f, 0f, 2.97419f, -0.133807f, 0f,
				2.83821f, -0.899029f, 0f, 2.50884f, -1.60295f, 0f, 1.40058f, -1.40365f, 0f, 1.59752f, -2.51231f, 0f,
				0.89292f, -2.84013f, 0f, 0.127261f, -2.97447f, 0f, -0.646951f, -2.90605f, 0f, -1.37697f, -2.63965f, 0f,
				-2.80717f, -2.80125f, 0f, -2.64265f, -1.37115f, 0f };

		ByteBuffer nbb = ByteBuffer.allocateDirect(valueNormal.length * 4);
		nbb.order(ByteOrder.nativeOrder());
		mNormalBuffer[2] = nbb.asFloatBuffer();
		mNormalBuffer[2].put(valueNormal);
		mNormalBuffer[2].position(0);
	}

	public void setNormal3() {
		float valueNormal[] = { -2.84019f, -0.892786f, 0f, -2.90608f, 0.646877f, 0f, -2.97447f, -0.127336f, 0f,
				-2.51239f, -1.59737f, 0f, -2.63963f, 1.37696f, 0f, -1.40363f, -1.40058f, 0f, -2.80108f, 2.80736f, 0f,
				-1.60287f, -2.5089f, 0f, -1.37137f, 2.64257f, 0f, -0.899025f, -2.83821f, 0f, -0.640539f, 2.90745f, 0f,
				-0.133775f, -2.97418f, 0f, 0.133826f, 2.9742f, 0f, 0.640609f, -2.90746f, 0f, 0.898874f, 2.83827f, 0f,
				1.37128f, -2.64259f, 0f, 1.60298f, 2.50879f, 0f, 2.80127f, -2.80718f, 0f, 1.40365f, 1.4006f, 0f,
				2.63961f, -1.37705f, 0f, 2.51225f, 1.59756f, 0f, 2.90605f, -0.646949f, 0f, 2.84019f, 0.892786f, 0f,
				2.97447f, 0.127337f, 0f, -2.50884f, 1.60293f, 6f, -2.90609f, 0.646795f, 3f, -2.97449f, -0.127238f, 2f,
				-1.40054f, 1.40368f, 3f, -2.63964f, 1.37695f, 3f, -1.59748f, 2.51235f, 4f, -2.8011f, 2.80733f, 2f,
				-1.37127f, 2.64262f, 3f, -0.892904f, 2.84012f, 3f, -0.64071f, 2.90744f, 3f, -0.127174f, 2.97449f, 4f,
				0.133801f, 2.97417f, 2f, 0.899054f, 2.83821f, 3f, 0.64685f, 2.90609f, 3f, 1.60293f, 2.50885f, 3f,
				1.37694f, 2.63962f, 3f, 1.40361f, 1.40062f, 3f, 2.8073f, 2.8012f, 4f, 2.51228f, 1.59755f, 2f, 2.84016f,
				0.892812f, 3f, 2.64258f, 1.37126f, 5f, 2.97449f, 0.127237f, 3f, 2.50889f, -1.6029f, 4f, 2.83819f,
				-0.899074f, 3f, 2.90747f, 0.640602f, 2f, 2.97419f, -0.133743f, 1f, -2.83825f, 0.898932f, 3f, -2.90747f,
				-0.640601f, 2f, -2.97419f, 0.133742f, 1f, -2.64265f, -1.37117f, 3f, -2.80726f, -2.80116f, 4f,
				-2.84016f, -0.892814f, 3f, -2.51236f, -1.59745f, 3f, -1.37699f, -2.63963f, 4f, -1.40364f, -1.40058f,
				2f, -1.60287f, -2.50889f, 3f, -0.646941f, -2.90606f, 3f, -0.898996f, -2.83824f, 3f, 0.127305f,
				-2.97447f, 3f, -0.133841f, -2.97417f, 3f, 0.892831f, -2.84017f, 4f, 0.640597f, -2.90748f, 2f, 1.37116f,
				-2.64264f, 3f, 1.59751f, -2.5123f, 3f, 2.80133f, -2.8071f, 3f, 1.40063f, -1.40359f, 4f, 2.63962f,
				-1.37706f, 2f, 2.90605f, -0.646882f, 3f, -2.50887f, 1.6029f, 3f, -2.90607f, 0.646939f, 3f, -2.97447f,
				-0.127246f, 0f, -1.40055f, 1.40366f, 3f, -2.63958f, 1.37702f, 3f, -1.59741f, 2.51238f, 4f, -2.80103f,
				2.80745f, 2f, -1.37145f, 2.64252f, 3f, -0.892914f, 2.84015f, 3f, -0.64067f, 2.90742f, 3f, -0.127352f,
				2.97445f, 4f, 0.133805f, 2.97418f, 2f, 0.899029f, 2.83821f, 3f, 0.647005f, 2.90605f, 3f, 1.60282f,
				2.50893f, 3f, 1.37702f, 2.63961f, 3f, 1.40358f, 1.40063f, 3f, 2.80723f, 2.80123f, 4f, 2.51236f,
				1.59741f, 2f, 2.84022f, 0.892701f, 3f, 2.64257f, 1.37133f, 5f, 2.97447f, 0.127262f, 3f, 2.50893f,
				-1.60286f, 4f, 2.83818f, -0.899071f, 3f, 2.90747f, 0.640507f, 2f, 2.97421f, -0.133727f, 1f, -2.83825f,
				0.898894f, 3f, -2.90747f, -0.64051f, 2f, -2.97421f, 0.133728f, 1f, -2.6426f, -1.37128f, 4f, -2.84013f,
				-0.892923f, 2f, -2.80728f, -2.80116f, 3f, -2.51231f, -1.59752f, 3f, -1.37693f, -2.63965f, 4f,
				-1.40358f, -1.40063f, 2f, -1.60283f, -2.50893f, 3f, -0.646996f, -2.90606f, 3f, -0.899029f, -2.83821f,
				3f, 0.127312f, -2.97446f, 3f, -0.133806f, -2.97419f, 3f, 0.892727f, -2.84022f, 4f, 0.64056f, -2.90747f,
				2f, 1.37124f, -2.64262f, 3f, 1.59746f, -2.51232f, 3f, 2.80113f, -2.80733f, 3f, 1.40067f, -1.40355f, 4f,
				2.63968f, -1.37683f, 2f, 2.9061f, -0.646844f, 3f, -2.90744f, -0.640627f, 0f, -2.97418f, 0.133839f, 0f,
				-2.83825f, 0.898955f, 0f, -2.50873f, 1.60307f, 0f, -1.40052f, 1.40373f, 0f, -1.59756f, 2.5123f, 0f,
				-0.893009f, 2.84009f, 0f, -0.127263f, 2.97447f, 0f, 0.646952f, 2.90605f, 0f, 1.37697f, 2.63965f, 0f,
				2.80717f, 2.80126f, 0f, 2.64265f, 1.37115f, 0f, 2.90749f, 0.640516f, 0f, 2.97418f, -0.133807f, 0f,
				2.8383f, -0.898811f, 0f, 2.50886f, -1.60288f, 0f, 1.40057f, -1.40366f, 0f, 1.59745f, -2.51234f, 0f,
				0.892793f, -2.84018f, 0f, 0.127261f, -2.97447f, 0f, -0.646951f, -2.90605f, 0f, -1.37697f, -2.63965f,
				0f, -2.80717f, -2.80125f, 0f, -2.64256f, -1.37137f, 0f };

		ByteBuffer nbb = ByteBuffer.allocateDirect(valueNormal.length * 4);
		nbb.order(ByteOrder.nativeOrder());
		mNormalBuffer[3] = nbb.asFloatBuffer();
		mNormalBuffer[3].put(valueNormal);
		mNormalBuffer[3].position(0);
	}

	public void setNormal4() {
		float valueNormal[] = { -2.84014f, -0.892845f, 0f, -2.90608f, 0.64688f, 0f, -2.97449f, -0.127174f, 0f,
				-2.51236f, -1.59745f, 0f, -2.63963f, 1.37696f, 0f, -1.40363f, -1.40058f, 0f, -2.80116f, 2.8073f, 0f,
				-1.6029f, -2.50889f, 0f, -1.37135f, 2.64256f, 0f, -0.899074f, -2.83819f, 0f, -0.640509f, 2.90746f, 0f,
				-0.133744f, -2.97419f, 0f, 0.133824f, 2.9742f, 0f, 0.640603f, -2.90747f, 0f, 0.898932f, 2.83825f, 0f,
				1.37122f, -2.64261f, 0f, 1.60293f, 2.50884f, 0f, 2.80127f, -2.80718f, 0f, 1.40361f, 1.40063f, 0f,
				2.63961f, -1.37705f, 0f, 2.51225f, 1.59756f, 0f, 2.90605f, -0.646948f, 0f, 2.84019f, 0.892784f, 0f,
				2.97447f, 0.127337f, 0f, -2.50884f, 1.60293f, 4f, -2.90606f, 0.646997f, 3f, -2.97445f, -0.127338f, 0f,
				-1.40058f, 1.40365f, 3f, -2.63964f, 1.37695f, 3f, -1.59753f, 2.5123f, 4f, -2.8011f, 2.80733f, 2f,
				-1.37127f, 2.64262f, 3f, -0.892844f, 2.84014f, 3f, -0.640709f, 2.90744f, 3f, -0.127175f, 2.97449f, 4f,
				0.1338f, 2.97417f, 2f, 0.899055f, 2.83821f, 3f, 0.646878f, 2.90608f, 3f, 1.60293f, 2.50885f, 3f,
				1.37696f, 2.63963f, 3f, 1.40361f, 1.40062f, 3f, 2.80722f, 2.80127f, 4f, 2.51232f, 1.59746f, 2f,
				2.84022f, 0.892739f, 3f, 2.64258f, 1.37126f, 5f, 2.97447f, 0.127438f, 3f, 2.50889f, -1.6029f, 4f,
				2.83819f, -0.899073f, 3f, 2.90747f, 0.640601f, 2f, 2.97419f, -0.133743f, 0.999999f, -2.83825f,
				0.898934f, 3f, -2.90746f, -0.64051f, 2f, -2.9742f, 0.133825f, 1f, -2.64259f, -1.37131f, 3f, -2.80726f,
				-2.80116f, 4f, -2.84015f, -0.892917f, 1f, -2.51236f, -1.59745f, 3f, -1.37705f, -2.63961f, 4f,
				-1.40364f, -1.40058f, 2f, -1.60287f, -2.50889f, 3f, -0.64695f, -2.90605f, 3f, -0.898995f, -2.83824f,
				3f, 0.127338f, -2.97447f, 3f, -0.133828f, -2.97417f, 3f, 0.892785f, -2.84019f, 4f, 0.640623f,
				-2.90748f, 2f, 1.37111f, -2.64268f, 3f, 1.59748f, -2.51231f, 3f, 2.80123f, -2.80718f, 3f, 1.40063f,
				-1.40359f, 4f, 2.63962f, -1.37706f, 2f, 2.90605f, -0.64688f, 3f, -2.50887f, 1.6029f, 3f, -2.90606f,
				0.646951f, 3f, -2.97447f, -0.127263f, 0f, -1.40055f, 1.40366f, 3f, -2.63954f, 1.37711f, 3f, -1.59741f,
				2.51238f, 4f, -2.80103f, 2.80746f, 2f, -1.37146f, 2.64252f, 3f, -0.892914f, 2.84015f, 3f, -0.640672f,
				2.90742f, 3f, -0.127351f, 2.97445f, 4f, 0.133805f, 2.97419f, 2f, 0.899029f, 2.83821f, 3f, 0.647004f,
				2.90605f, 3f, 1.60283f, 2.50893f, 3f, 1.37702f, 2.63961f, 3f, 1.40358f, 1.40063f, 3f, 2.80723f,
				2.80123f, 4f, 2.51236f, 1.59741f, 2f, 2.84022f, 0.892701f, 3f, 2.64264f, 1.37116f, 5f, 2.97447f,
				0.127263f, 3f, 2.50893f, -1.60286f, 4f, 2.83818f, -0.89907f, 3f, 2.90748f, 0.640621f, 2f, 2.97419f,
				-0.133625f, 1f, -2.83824f, 0.898998f, 3f, -2.90744f, -0.640712f, 2f, -2.97417f, 0.133828f, 0.999999f,
				-2.6426f, -1.37128f, 4f, -2.84013f, -0.892919f, 2f, -2.80728f, -2.80115f, 3f, -2.51231f, -1.59752f, 3f,
				-1.37693f, -2.63965f, 4f, -1.40358f, -1.40063f, 2f, -1.60282f, -2.50893f, 3f, -0.646995f, -2.90606f,
				3f, -0.899047f, -2.83821f, 3f, 0.127338f, -2.97445f, 3f, -0.133857f, -2.97418f, 3f, 0.89274f,
				-2.84022f, 4f, 0.640524f, -2.90747f, 2f, 1.37124f, -2.64262f, 3f, 1.59736f, -2.51239f, 3f, 2.80126f,
				-2.80717f, 3f, 1.40061f, -1.40359f, 4f, 2.63965f, -1.37697f, 2f, 2.90606f, -0.646951f, 3f, -2.90744f,
				-0.640625f, 0f, -2.97419f, 0.133805f, 0f, -2.83821f, 0.899029f, 0f, -2.50871f, 1.60311f, 0f, -1.40052f,
				1.40373f, 0f, -1.59756f, 2.5123f, 0f, -0.893012f, 2.84009f, 0f, -0.127263f, 2.97447f, 0f, 0.646951f,
				2.90606f, 0f, 1.37697f, 2.63965f, 0f, 2.80717f, 2.80125f, 0f, 2.64265f, 1.37115f, 0f, 2.90749f,
				0.640516f, 0f, 2.97419f, -0.133805f, 0f, 2.83821f, -0.899029f, 0f, 2.50893f, -1.60283f, 0f, 1.40063f,
				-1.40358f, 0f, 1.59745f, -2.51234f, 0f, 0.892773f, -2.84018f, 0f, 0.127208f, -2.97447f, 0f, -0.646985f,
				-2.90605f, 0f, -1.37697f, -2.63965f, 0f, -2.80716f, -2.80126f, 0f, -2.64256f, -1.37136f, 0f };

		ByteBuffer nbb = ByteBuffer.allocateDirect(valueNormal.length * 4);
		nbb.order(ByteOrder.nativeOrder());
		mNormalBuffer[4] = nbb.asFloatBuffer();
		mNormalBuffer[4].put(valueNormal);
		mNormalBuffer[4].position(0);
	}

	public void setNormal5() {
		float valueNormal[] = { 0f, 0f, 2f, 0f, 0f, 9f, 0f, 0f, 1f, 0f, 0f, 2f, 0f, 0f, 2f, 0f, 0f, 2f, 0f, 0f, 2f, 0f,
				0f, 2f, 0f, 0f, 2f, 0f, 0f, 3f, 0f, 0f, 3f, 0f, 0f, 4f, 0f, 0f, 2f, 0f, 0f, 3f, 0f, 0f, 6f, 0f, 0f, 2f,
				0f, 0f, 2f, 0f, 0f, 3f, 0f, 0f, 6f, 0f, 0f, 5f, 0f, 0f, 3f, 0f, 0f, 2f, 0f, 0f, 2f, 0f, 0f, 2f, 0f, 0f,
				3f, 0f, 0f, 4f, 0f, 0f, 2f, 0f, 0f, 3f, 0f, 0f, 3f, 0f, 0f, 7f, 0f, 0f, 2f, 0f, 0f, 2f, 0f, 0f, 2f, 0f,
				0f, 2f, 0f, 0f, 2f, 0f, 0f, 1f, 0f, 0f, 9f, 0f, 0f, 2f, 0f, 0f, 1f, 0f, 0f, 2f, 0f, 0f, 2f, 0f, 0f, 2f,
				0f, 0f, 2f, 0f, 0f, 2f, 0f, 0f, 2f, 0f, 0f, 3f, 0f, 0f, 3f, 0f, 0f, 4f, 0f, 0f, 2f, 0f, 0f, 3f, 0f, 0f,
				7f, 0f, 0f, 2f, 0f, 0f, 2f, 0f, 0f, 3f, 0f, 0f, 3f, 0f, 0f, 3f, 0f, 0f, 3f, 0f, 0f, 3f, 0f, 0f, 3f, 0f,
				0f, 3f, 0f, 0f, 3f, 0f, 0f, 3f, 0f, 0f, 3f, 0f, 0f, 3f, 0f, 0f, 3f, 0f, 0f, 3f, 0f, 0f, 3f, 0f, 0f, 3f,
				0f, 0f, 3f, 0f, 0f, 3f, 0f, 0f, 3f, 0f, 0f, 4f, 0f, 0f, 2f, 0f, 0f, 3f, 0f, 0f, 3f, 0f, 0f, 3f, 0f, 0f,
				3f, 0f, 0f, 3f, 0f, 0f, 3f, 0f, 0f, 3f, 0f, 0f, 3f, 0f, 0f, 3f, 0f, 0f, 3f, 0f, 0f, 3f, 0f, 0f, 3f, 0f,
				0f, 3f, 0f, 0f, 3f, 0f, 0f, 4f, 0f, 0f, 6f, 0f, 0f, 2f, 0f, 0f, 2f, 0f, 0f, 2f, 0f, 0f, 3f, 0f, 0f, 4f,
				0f, 0f, 2f, 0f, 0f, 3f, 0f, 0f, 3f, 0f, 0f, 7f, 0f, 0f, 2f, 0f, 0f, 2f, 0f, 0f, 2f, 0f, 0f, 2f, 0f, 0f,
				2f, 0f, 0f, 1f };

		ByteBuffer nbb = ByteBuffer.allocateDirect(valueNormal.length * 4);
		nbb.order(ByteOrder.nativeOrder());
		mNormalBuffer[5] = nbb.asFloatBuffer();
		mNormalBuffer[5].put(valueNormal);
		mNormalBuffer[5].position(0);
	}

	public void setNormal6() {
		float valueNormal[] = { -2.59161f, -0.58222f, 1.38629f, -2.05442f, 2.1011f, 0.58924f, -2.44268f, 0.477584f,
				1.04078f, -2.47258f, -0.882195f, 1.4446f, -2.32019f, -1.1606f, 1.5f, -2.13935f, -1.41445f, 1.55048f,
				-1.93511f, -1.64207f, 1.59423f, -1.15699f, -1.21819f, 1.08053f, -1.55799f, -1.96478f, 1.63953f,
				-1.31213f, -2.12231f, 1.65859f, -2.1928f, 1.90223f, 0.73556f, -1.05586f, -2.25538f, 1.66622f,
				-2.40685f, 1.56998f, 0.843085f, -2.57786f, 1.21465f, 0.920801f, -0.790672f, -2.36517f, 1.66122f,
				-2.70643f, 0.841964f, 0.966569f, -2.79283f, 0.456934f, 0.978656f, -2.83663f, 0.063483f, 0.95578f,
				-2.81208f, -2.83336f, 0.092186f, -2.62093f, 0.329227f, 1.41f, -1.55699f, -0.667702f, 0.400292f,
				-2.48316f, 0.654297f, 1.54038f, -2.30716f, 0.947678f, 1.65757f, -2.10211f, 1.20641f, 1.75962f,
				-1.87636f, 1.43026f, 1.84562f, -2.13635f, 2.18899f, 2.56927f, -1.30128f, 1.82603f, 1.9891f, -1.04624f,
				1.95157f, 2.02034f, -2.33224f, -1.84566f, 0.315223f, -0.787546f, 2.05463f, 2.03556f, -2.53894f,
				-1.49813f, 0.507655f, -2.69066f, -1.1233f, 0.671482f, -0.524732f, 2.13771f, 2.03464f, -2.78872f,
				-0.73237f, 0.802094f, -2.83621f, -0.334647f, 0.89705f, -0.517429f, -2.45239f, 1.64247f, -0.256326f,
				2.20236f, 2.01688f, 0.426396f, -2.38341f, 1.33965f, 0.573157f, 1.40183f, 1.07985f, 1.93567f, -2.19264f,
				0.651247f, 2.49827f, 2.73544f, 1.49916f, 1.74298f, -2.34212f, 0.659811f, 1.58286f, 2.2313f, 1.21958f,
				1.42584f, -2.52104f, 0.757391f, 1.25595f, 2.36753f, 1.33852f, 1.09439f, -2.65859f, 0.836516f,
				0.926204f, 2.4647f, 1.4295f, 0.753688f, -2.75539f, 0.899113f, 0.596886f, 2.52616f, 1.49641f, 0.40781f,
				-2.81218f, 0.946822f, 0.216187f, 1.70113f, 1.02387f, 0.116896f, -1.88835f, 0.64842f, -5.08161f,
				-2.36209f, 1.47414f, -5.35465f, -1.75151f, 1.41904f, -4.74064f, -2.93225f, 1.5257f, -5.55358f,
				-1.10856f, 1.36241f, -5.61907f, 2.46346f, 0.809271f, -3.53204f, 3.42292f, 0.687564f, -4.57584f,
				3.69637f, 0.787605f, -5.00959f, 3.0305f, 0.882485f, -5.35463f, 2.31669f, 0.946597f, -5.60871f,
				1.56635f, 0.978352f, -5.76962f, 0.790671f, 0.976544f, -5.83518f, -0.000491f, 0.940245f, -5.80271f,
				-0.796149f, 0.868825f, -5.66922f, -1.58417f, 0.762035f, -5.43214f, -2.35087f, 0.620845f, -5.09057f,
				-3.07953f, 0.448057f, -4.64649f, -3.75216f, 0.248679f, -4.27745f, -4.19944f, 0.089337f, -4.82054f,
				-1.96849f, 0.883591f, -5.55371f, 0.794867f, 1.45498f, -5.33341f, 1.48351f, 1.58154f, -5.0306f,
				2.12854f, 1.69433f, -4.65569f, 2.7218f, 1.79176f, -4.2189f, 3.25803f, 1.87301f, -3.90625f, 3.90516f,
				1.28203f, -3.18106f, 4.18217f, 1.96787f, -2.6018f, 4.52623f, 2.00612f, -1.99363f, 4.80322f, 2.02834f,
				-1.3626f, 5.01297f, 2.03433f, -0.713514f, 5.15532f, 2.02353f, 1.80988f, 4.51123f, 2.08908f, 4.01099f,
				4.27962f, 0.712211f, 3.48044f, 4.57809f, 1.16921f, 2.8241f, 4.94192f, 1.30031f, 2.13682f, 5.22061f,
				1.40165f, 1.42953f, 5.41423f, 1.47707f, 0.186815f, -2.94028f, 0.323556f, 0.738734f, -5.78414f,
				0.957243f, 1.46266f, -5.6598f, 0.911031f, 2.16864f, -5.44812f, 0.850036f, 2.8468f, -5.15054f,
				0.773001f, 3.48611f, -4.76975f, 0.67851f, 3.93999f, -4.44099f, 0.591048f, 1.63264f, -4.96618f,
				0.97933f, -1.06906f, -5.39959f, 1.63632f, -1.68871f, -5.22125f, 1.66153f, -2.28587f, -4.98076f,
				1.67207f, -2.85502f, -4.67985f, 1.66911f, -3.3907f, -4.32019f, 1.65388f, -3.75784f, -3.81819f, 2.1593f,
				-4.33864f, -3.45552f, 1.5718f, 0.710557f, 5.52362f, 1.52978f, 0.121356f, 1.85094f, 0.518765f,
				-2.95443f, 0.488218f, 0f, -1.42637f, -1.40033f, 0f, -3.37303f, -1.29253f, 0f, -2.86739f, 0.863151f, 0f,
				-2.73299f, 1.22382f, 0f, -2.55346f, 1.56422f, 0f, -2.29474f, -1.92295f, 0f, -2.5327f, -1.59659f, 0f,
				-2.72448f, -1.24129f, 0f, -2.86676f, -0.863292f, 0f, -2.95687f, -0.469659f, 0f, -2.99316f, -0.067499f,
				0f, -2.8706f, 2.78344f, 0f, -2.94951f, -0.522042f, 0f, -1.68928f, 0.580198f, 0f, -2.86746f, -0.865921f,
				0f, -2.74546f, -1.19775f, 0f, -2.37906f, 1.81759f, 0f, -2.60201f, 1.48093f, 0f, -2.77763f, 1.1173f, 0f,
				-2.90273f, 0.733304f, 0f, -2.97501f, 0.336075f, 0f, -2.33171f, 1.87885f, 0f, -1.41129f, 1.4113f, 0f,
				-1.87885f, 2.33171f, 0f, -1.56422f, 2.55346f, 0f, -1.22375f, 2.73302f, 0f, -0.863183f, 2.86738f, 0f,
				-0.488298f, 2.9544f, 0f, 1.25883f, 3.40771f, 0f, 1.36684f, 1.45858f, 0f, 1.87483f, 2.33469f, 0f,
				1.55403f, 2.55944f, 0f, 1.2064f, 2.7405f, 0f, 0.838215f, 2.87457f, 0f, 0.455764f, 2.9594f, 0f,
				0.130848f, 1.99572f, 0f, -2.58521f, -1.51288f, 0f, -2.3889f, -1.80701f, 0f, -2.82343f, -2.82356f, 0f,
				-1.80697f, -2.38893f, 0f, -1.51293f, -2.58518f, 0f, -1.19777f, -2.74545f, 0f, -0.865893f, -2.86747f,
				0f, -0.522026f, -2.94951f, 0f, 1.24456f, -2.43843f, 0f, 1.97535f, -2.25609f, 0f, 1.72383f, -2.44872f,
				0f, 1.40003f, -2.64721f, 0f, 1.05363f, -2.80315f, 0f, 0.690401f, -2.91397f, 0f, 0.316043f, -2.97791f,
				0f, 0.063408f, -0.997987f, 0f };

		ByteBuffer nbb = ByteBuffer.allocateDirect(valueNormal.length * 4);
		nbb.order(ByteOrder.nativeOrder());
		mNormalBuffer[6] = nbb.asFloatBuffer();
		mNormalBuffer[6].put(valueNormal);
		mNormalBuffer[6].position(0);
	}

	public void setColor0() {
		float valueColor[] = { 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f };

		ByteBuffer cbb = ByteBuffer.allocateDirect(valueColor.length * 4);
		cbb.order(ByteOrder.nativeOrder());
		mColorBuffer[0] = cbb.asFloatBuffer();
		mColorBuffer[0].put(valueColor);
		mColorBuffer[0].position(0);
	}

	public void setColor1() {
		float valueColor[] = { 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f };

		ByteBuffer cbb = ByteBuffer.allocateDirect(valueColor.length * 4);
		cbb.order(ByteOrder.nativeOrder());
		mColorBuffer[1] = cbb.asFloatBuffer();
		mColorBuffer[1].put(valueColor);
		mColorBuffer[1].position(0);
	}

	public void setColor2() {
		float valueColor[] = { 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f };

		ByteBuffer cbb = ByteBuffer.allocateDirect(valueColor.length * 4);
		cbb.order(ByteOrder.nativeOrder());
		mColorBuffer[2] = cbb.asFloatBuffer();
		mColorBuffer[2].put(valueColor);
		mColorBuffer[2].position(0);
	}

	public void setColor3() {
		float valueColor[] = { 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f };

		ByteBuffer cbb = ByteBuffer.allocateDirect(valueColor.length * 4);
		cbb.order(ByteOrder.nativeOrder());
		mColorBuffer[3] = cbb.asFloatBuffer();
		mColorBuffer[3].put(valueColor);
		mColorBuffer[3].position(0);
	}

	public void setColor4() {
		float valueColor[] = { 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f,
				0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f,
				0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f,
				0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f, 0.6039f, 0.4392f, 0.262699f,
				1.0f, 0.6039f, 0.4392f, 0.262699f, 1.0f };

		ByteBuffer cbb = ByteBuffer.allocateDirect(valueColor.length * 4);
		cbb.order(ByteOrder.nativeOrder());
		mColorBuffer[4] = cbb.asFloatBuffer();
		mColorBuffer[4].put(valueColor);
		mColorBuffer[4].position(0);
	}

	public void setColor5() {
		float valueColor[] = { 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f };

		ByteBuffer cbb = ByteBuffer.allocateDirect(valueColor.length * 4);
		cbb.order(ByteOrder.nativeOrder());
		mColorBuffer[5] = cbb.asFloatBuffer();
		mColorBuffer[5].put(valueColor);
		mColorBuffer[5].position(0);
	}

	public void setColor6() {
		float valueColor[] = { 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f,
				0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f,
				0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f, 0.580399f, 0.3059f, 0.125499f, 1.0f,
				0.580399f, 0.3059f, 0.125499f, 1.0f };

		ByteBuffer cbb = ByteBuffer.allocateDirect(valueColor.length * 4);
		cbb.order(ByteOrder.nativeOrder());
		mColorBuffer[6] = cbb.asFloatBuffer();
		mColorBuffer[6].put(valueColor);
		mColorBuffer[6].position(0);
	}

	@Override
	public void draw(GL10 gl, int variable) {
		// TODO Auto-generated method stub
		
	}
}
